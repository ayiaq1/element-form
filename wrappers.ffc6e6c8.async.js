(self.webpackChunk_dawdler_schema_form_doc=self.webpackChunk_dawdler_schema_form_doc||[]).push([[275],{73602:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval(`/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "m": function() { return /* reexport safe */ _history__WEBPACK_IMPORTED_MODULE_0__.m; }
/* harmony export */ });
/* harmony import */ var _history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67624);
/* harmony import */ var _plugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93142);
// @ts-nocheck

//# sourceURL=[module]
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzM2MDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGF3ZGxlci9zY2hlbWEtZm9ybS1kb2MvLi8udW1pLXByb2R1Y3Rpb24vY29yZS91bWlFeHBvcnRzLnRzPzMxOTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmV4cG9ydCB7IGhpc3RvcnkgfSBmcm9tICcuL2hpc3RvcnknO1xuZXhwb3J0IHsgcGx1Z2luIH0gZnJvbSAnLi9wbHVnaW4nO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9
//# sourceURL=webpack-internal:///73602
`)},73936:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval(`// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ dumi_layout; }
});

// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(91896);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
;// CONCATENATED MODULE: ./.umi-production/dumi/config.json
var config_namespaceObject = JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"schema-form","meta":{"order":null}},{"title":"Guide","path":"/guide","meta":{},"children":[{"path":"/guide/cascader-field","title":"CascaderField","meta":{}},{"path":"/guide/element","title":"Element","meta":{}},{"path":"/guide/field","title":"Field","meta":{}},{"path":"/guide/input-wrap","title":"InputWrap","meta":{}},{"path":"/guide/schema-form-custom","title":"SchemaForm: custom\u81EA\u5B9A\u4E49\u5E03\u5C40","meta":{}},{"path":"/guide/schema-form-row","title":"SchemaForm\uFF1Arow\u5E03\u5C40","meta":{}},{"path":"/guide/select-field","title":"SelectField","meta":{}},{"path":"/guide/timer-convert","title":"TimeConvertWrap","meta":{}},{"path":"/guide/tree-select-field","title":"TreeSelectField","meta":{}}]}],"/hooks":[{"title":"usePrevious","path":"/hooks/usePrevious","meta":{},"children":[]}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{},"title":"@dawdler/schema-form-doc","mode":"doc","repository":{"url":"https://github.com/ayiaq1/schema-form","branch":"master"},"theme":{}}');
// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(3182);
// EXTERNAL MODULE: ./node_modules/@umijs/babel-preset-umi/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(94043);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
// EXTERNAL MODULE: ./node_modules/@umijs/runtime/dist/index.esm.js + 1 modules
var index_esm = __webpack_require__(33761);
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/CascaderFieldDemo.tsx?dumi-raw-code
/* harmony default export */ var CascaderFieldDemodumi_raw_code = ("import React from 'react';\\nimport { CascaderField } from '../src';\\nimport { CascaderDataFieldNames, initValues } from './config';\\n\\nconst CascaderFieldDemo = () => {\\n  return (\\n    <CascaderField\\n      value={initValues.cascader}\\n      fieldProps={{\\n        options: CascaderDataFieldNames,\\n        fieldNames: {\\n          label: 'title',\\n          value: 'value',\\n          children: 'options',\\n        },\\n      }}\\n    />\\n  );\\n};\\nexport default CascaderFieldDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/index.tsx?dumi-raw-code
/* harmony default export */ var srcdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-10-09 11:46:52\\n * @Description: \u6587\u672C\u7C7B\u578B\\n * @LastModifiedBy: yihuang\\n */\\nimport Element from './components/Element';\\nimport SchemaForm from './components/SchemaForm';\\nimport TimeConvertWrap from './components/TimeConvertWrap';\\nimport Field from './components/Field';\\nimport InputWrap from './components/InputWrap';\\nimport SelectField from './components/SelectField';\\nimport TreeSelectField from './components/TreeSelectField';\\nimport CascaderField from './components/CascaderField';\\n\\nexport {\\n  SchemaForm,\\n  Element,\\n  Field,\\n  TimeConvertWrap,\\n  InputWrap,\\n  SelectField,\\n  TreeSelectField,\\n  CascaderField,\\n};\\n\\nexport default SchemaForm;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/Element.tsx?dumi-raw-code
/* harmony default export */ var Elementdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-16 10:42:13\\n * @Description: \u7EC4\u4EF6\u7684\u9002\u914D\u5C42\uFF0C\u7528\u4E8E\u5224\u65AD\u4F7F\u7528\u4EC0\u4E48\u7C7B\u578B\u7684\u7EC4\u4EF6\u3002\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport type {\\n  IAvatarProps,\\n  IBaseFieldProps,\\n  ICascaderProps,\\n  ICheckboxGroupProps,\\n  ICheckboxProps,\\n  ICustomProps,\\n  IDatePickerProps,\\n  IDescriptionsProps,\\n  IDividerProps,\\n  IImageProps,\\n  IInputGroupProps,\\n  IInputNumberProps,\\n  IInputProps,\\n  IPasswordProps,\\n  IProgressProps,\\n  IProps,\\n  IRadioGroupProps,\\n  IRangePickerProps,\\n  IRateProps,\\n  ISearchProps,\\n  ISelectProps,\\n  ISliderProps,\\n  ISwitchProps,\\n  ITagProps,\\n  ITextAreaProps,\\n  ITextProps,\\n  ITimePickerProps,\\n  ITimeRangePickerProps,\\n  ITreeSelectProps,\\n  IUploadProps,\\n} from '../typings';\\nimport {\\n  Select,\\n  Checkbox,\\n  Input,\\n  InputNumber,\\n  Radio,\\n  Rate,\\n  Slider,\\n  Switch,\\n  Upload,\\n  Image,\\n  Tag,\\n  Progress,\\n  Cascader,\\n  TreeSelect,\\n  Avatar,\\n  Divider,\\n} from 'antd';\\nimport { converChangeEvent } from './SchemaForm/utils';\\nimport TimeConvertWrap from './TimeConvertWrap';\\nimport InputWrap from './InputWrap';\\nimport Text from './Text';\\nimport DescriptionWrap from './DescriptionWrap';\\n\\n/** Element \u72EC\u7ACB\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u91CD\u8F7Dtype\u63A8\u5BFC\u7C7B\u578B\u3002 */\\n/** divider */\\nfunction Element(props: IDividerProps): JSX.Element;\\n/** descriptions */\\nfunction Element(props: IDescriptionsProps): JSX.Element;\\n/** text */\\nfunction Element(props: ITextProps): JSX.Element;\\n/** input */\\nfunction Element(props: IInputProps): JSX.Element;\\n/** inputGroup */\\nfunction Element(props: IInputGroupProps): JSX.Element;\\n/** textarea */\\nfunction Element(props: ITextAreaProps): JSX.Element;\\n/** search */\\nfunction Element(props: ISearchProps): JSX.Element;\\n/** password */\\nfunction Element(props: IPasswordProps): JSX.Element;\\n/** InputNumber */\\nfunction Element(props: IInputNumberProps): JSX.Element;\\n/** Select */\\nfunction Element(props: ISelectProps): JSX.Element;\\n/** datePicker */\\nfunction Element(props: IDatePickerProps): JSX.Element;\\n/** rangePicker */\\nfunction Element(props: IRangePickerProps): JSX.Element;\\n/** timePicker */\\nfunction Element(props: ITimePickerProps): JSX.Element;\\n/** TimeRangePicker */\\nfunction Element(props: ITimeRangePickerProps): JSX.Element;\\n/** Checkbox */\\nfunction Element(props: ICheckboxProps): JSX.Element;\\n/** CheckboxGroup */\\nfunction Element(props: ICheckboxGroupProps): JSX.Element;\\n/** RadioGroup */\\nfunction Element(props: IRadioGroupProps): JSX.Element;\\n/** Rate */\\nfunction Element(props: IRateProps): JSX.Element;\\n/** slider */\\nfunction Element(props: ISliderProps): JSX.Element;\\n/** switch */\\nfunction Element(props: ISwitchProps): JSX.Element;\\n/** upload */\\nfunction Element(props: IUploadProps): JSX.Element;\\n/** Avatar */\\nfunction Element(props: IAvatarProps): JSX.Element;\\n/** Image */\\nfunction Element(props: IImageProps): JSX.Element;\\n/** Tag */\\nfunction Element(props: ITagProps): JSX.Element;\\n/** Progress */\\nfunction Element(props: IProgressProps): JSX.Element;\\n/** TreeSelect */\\nfunction Element(props: ITreeSelectProps): JSX.Element;\\n/** Cascader */\\nfunction Element(props: ICascaderProps): JSX.Element;\\n/** Custom */\\nfunction Element(props: ICustomProps): JSX.Element;\\n\\n/** \u5177\u4F53\u5B9E\u73B0 */\\nfunction Element({ type, render, fieldProps, onChange, ...resetProps }: IProps) {\\n  const { children, value, ...resetFieldProps } = (fieldProps as any) ?? {};\\n  const [val, setVal] = useState(value ?? resetProps.value);\\n  /** \u8F6C\u6362 form \u8868\u5355\u7684 change */\\n  const onChangeFunc = (params: any) => {\\n    const values = converChangeEvent(params);\\n    setVal(values);\\n    resetFieldProps?.onChange?.(values);\\n    onChange?.(values);\\n  };\\n  /** \u53BB\u524D\u540E\u7A7A\u683C\uFF0C\u4E3B\u8981\u7ED9 Search\\\\Password \u7B49\u7EC4\u4EF6 onBlur\\\\onPressEnter \u65F6\u4F7F\u7528 */\\n  const onTrimFunc = (params: any) => {\\n    let currentVal = params;\\n    // \u5982\u679C\u660E\u786E\u53C2\u6570, \u4E0D\u53BB\u6389\u524D\u540E\u7A7A\u683C\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\\n    if (resetFieldProps.isTrim === false) {\\n      onChangeFunc?.(currentVal);\\n      return;\\n    }\\n    if (typeof currentVal === 'string') {\\n      const v = currentVal?.trim();\\n      currentVal = v === '' ? null : v;\\n      // onBlur\u65F6\u4E0D\u89E6\u53D1\\n      resetFieldProps?.onSearch?.(currentVal);\\n    } else if (currentVal?.target) {\\n      const v = currentVal.target?.value?.trim();\\n      currentVal = v === '' ? null : v;\\n    }\\n    onChangeFunc?.(currentVal);\\n  };\\n  useEffect(() => {\\n    setVal(value);\\n  }, [value]);\\n  // \u8868\u5355\u91CD\u7F6E\u7684\u65F6\u5019\u503C\u4E3A resetProps.value\\n  useEffect(() => {\\n    setVal(resetProps.value);\\n  }, [resetProps.value]);\\n\\n  // \u8868\u5355 \u4F7F\u7528 valuePropName \u65F6\u7528\u7684\u5B57\u6BB5\u4E3AresetProps?.id\\n  useEffect(() => {\\n    const baseFieldProps = resetFieldProps as IBaseFieldProps;\\n    if (baseFieldProps?.valuePropName) {\\n      setVal(resetProps[baseFieldProps?.valuePropName]);\\n    }\\n  }, [resetProps, resetFieldProps]);\\n\\n  switch (type) {\\n    case 'text':\\n      return <Text {...resetProps} fieldProps={resetFieldProps} value={val} />;\\n    case 'input':\\n      return (\\n        <InputWrap\\n          {...resetProps}\\n          fieldProps={resetFieldProps}\\n          value={val}\\n          onChange={onChangeFunc}\\n        />\\n      );\\n    case 'descriptions':\\n      return <DescriptionWrap fieldProps={resetFieldProps} />;\\n    // \u65E5\u671F\u7C7B\u578B\u505A\u4E00\u5C42\u6570\u636E\u8F6C\u6362\\n    case 'datePicker':\\n    case 'rangePicker':\\n    case 'timePicker':\\n    case 'timeRangePicker':\\n      return (\\n        <TimeConvertWrap\\n          {...resetProps}\\n          type={type}\\n          fieldProps={resetFieldProps}\\n          onChange={onChangeFunc}\\n          value={val}\\n        />\\n      );\\n    // ======== \u4EE5\u4E0B\u4E3A antd \u7EC4\u4EF6 ==========\\n    case 'divider':\\n      return <Divider {...resetFieldProps} />;\\n    case 'inputGroup':\\n      return (\\n        <Input.Group {...resetFieldProps}>\\n          {/* \u7981\u7528\u72B6\u6001:\u4F7F\u7528\u6700\u7EC8\u7684\u7ED3\u679C\u4F20\u7ED9\u5916\u9762 */}\\n          {children?.({\\n            ...resetFieldProps,\\n            onChange: onChangeFunc,\\n            value: val,\\n            disabled: resetFieldProps.disabled,\\n            readOnly: resetFieldProps.readOnly,\\n          })}\\n        </Input.Group>\\n      );\\n    case 'textarea':\\n      return <Input.TextArea {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'search':\\n      return (\\n        <Input.Search\\n          {...resetFieldProps}\\n          onChange={onChangeFunc}\\n          onSearch={onTrimFunc}\\n          onBlur={onTrimFunc}\\n          value={val}\\n        />\\n      );\\n    case 'password':\\n      return (\\n        <Input.Password\\n          {...resetFieldProps}\\n          onChange={onChangeFunc}\\n          onPressEnter={onTrimFunc}\\n          onBlur={onTrimFunc}\\n          value={val}\\n        />\\n      );\\n    case 'inputNumber':\\n      return <InputNumber {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'select':\\n      return <Select {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'checkbox':\\n      return <Checkbox {...resetFieldProps} onChange={onChangeFunc} checked={val} />;\\n    case 'checkboxGroup':\\n      return <Checkbox.Group {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'radioGroup':\\n      return <Radio.Group {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'rate':\\n      return <Rate {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'slider':\\n      return <Slider {...resetFieldProps} onChange={onChangeFunc} value={val} />;\\n    case 'switch':\\n      return <Switch {...resetFieldProps} onChange={onChangeFunc} checked={val} />;\\n    case 'upload':\\n      return (\\n        <Upload fileList={val} {...resetFieldProps} onChange={onChangeFunc}>\\n          {children?.({\\n            ...resetFieldProps,\\n            onChange: onChangeFunc,\\n            value: val,\\n            disabled: resetFieldProps.disabled,\\n            readOnly: resetFieldProps.readOnly,\\n          })}\\n        </Upload>\\n      );\\n    case 'avatar':\\n      return <Avatar {...resetFieldProps} onChange={onChangeFunc} src={val} />;\\n    case 'image':\\n      return <Image {...resetFieldProps} onChange={onChangeFunc} src={val} />;\\n    case 'tag':\\n      return (\\n        <Tag\\n          {...resetFieldProps}\\n          closable={!resetFieldProps.disabled ?? resetFieldProps.closable}\\n          onClose={onChangeFunc}\\n          onChange={onChangeFunc}\\n        >\\n          {children\\n            ? children({\\n                ...resetFieldProps,\\n                onChange: onChangeFunc,\\n                value: val,\\n                disabled: resetFieldProps.disabled,\\n                readOnly: resetFieldProps.readOnly,\\n              })\\n            : val}\\n        </Tag>\\n      );\\n    case 'progress':\\n      return <Progress {...resetFieldProps} percent={val} />;\\n    case 'treeSelect':\\n      return <TreeSelect {...resetFieldProps} value={val} onChange={onChangeFunc} />;\\n    case 'cascader':\\n      return <Cascader {...resetFieldProps} value={val} onChange={onChangeFunc} />;\\n    case 'custom':\\n      return render?.({\\n        ...resetFieldProps,\\n        onChange: onChangeFunc,\\n        value: val,\\n        disabled: resetFieldProps.disabled,\\n        readOnly: resetFieldProps.readOnly,\\n      });\\n    default:\\n      throw new Error(\`\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684type\u7C7B\u578B: \${type}\`);\\n  }\\n}\\nElement.displayName = 'Element';\\nexport default Element;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/utils.ts?dumi-raw-code
/* harmony default export */ var utilsdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-03-01 11:47:38\\n * @Description: \u8F6C\u6362\u5DE5\u5177\\n * @LastModifiedBy: yihuang\\n */\\n\\n/** \u8F6C\u6362\u6240\u6709UI\u7EC4\u4EF6\u7684onChange\u6570\u636E */\\nexport const converChangeEvent = (params: any): any => {\\n  let str = params;\\n\\n  if (params?.target) {\\n    str = params.target.value;\\n  }\\n  return str;\\n};");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/TimeConvertWrap.tsx?dumi-raw-code
/* harmony default export */ var TimeConvertWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-06-21 16:24:28\\n * @Description: \u65E5\u671F\u7C7B\u578B\u7684\u5305\u88F9\u5668 - \u5C06antd\u6240\u6709\u65E5\u671F\u7C7B\u578B\u505A\u4E00\u5C42\u6570\u636E\u8F6C\u6362\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState, memo } from 'react';\\nimport {\\n  ITimeConvertProps,\\n  Date_Picker,\\n  Range_Picker,\\n  Time_Picker,\\n  Time_Range_Picker,\\n  EnumDataType,\\n  FormatTimeType,\\n  Unix,\\n  UnixValueOf,\\n} from '../typings';\\nimport {\\n  DatePicker,\\n  DatePickerProps,\\n  TimePicker,\\n  TimePickerProps,\\n  TimeRangePickerProps,\\n} from 'antd';\\nimport type { Moment } from 'moment';\\nimport type { RangePickerProps } from 'antd/lib/date-picker';\\nimport { formatMomentFunc } from '../utils';\\nimport moment, { isMoment } from 'moment';\\nimport usePrevious from '../hooks/usePrevious';\\n\\nconst TimeConvertWrap = (props: ITimeConvertProps) => {\\n  const { type, value, onChange, fieldProps } = props;\\n  const { convertResult, showTime } = fieldProps ?? {};\\n  const [val, setVal] = useState<any>();\\n  // prop.preValue \u4E0A\u4E00\u6B21\u7684\u503C\\n  const preValue = usePrevious(value);\\n\\n  // \u8F6C\u6362\u503C\u4E3A moment \u7C7B\u578B\\n  const setValueToMomentFunc = (data: any) => {\\n    const format = [Date_Picker, Range_Picker].includes(type)\\n      ? EnumDataType.YMD_HMS\\n      : EnumDataType.HMS;\\n    if (data instanceof Array) {\\n      return data.map((item, index) => {\\n        if (isMoment(item)) {\\n          return item;\\n        } else if (Number.isInteger(item)) {\\n          return moment.unix(item);\\n        } else if ([Time_Range_Picker, Time_Picker].includes(type)) {\\n          return moment(item, format);\\n        } else if (Range_Picker === type) {\\n          const isStr = typeof convertResult === 'string';\\n          if (isStr && [Unix, UnixValueOf].includes(convertResult)) {\\n            return moment(item);\\n          }\\n          const f = isStr\\n            ? convertResult\\n            : index === 0\\n            ? EnumDataType.YMD_START_TIME\\n            : EnumDataType.YMD_END_TIME;\\n          return moment(moment(item).format(f));\\n        } else {\\n          return item;\\n        }\\n      });\\n    } else if (isMoment(data)) {\\n      return data;\\n    } else if ([Time_Range_Picker, Time_Picker].includes(type)) {\\n      return moment(data, format);\\n    } else {\\n      return moment(data);\\n    }\\n  };\\n  // \u83B7\u53D6\u6570\u636E\u4E3Amoment\u7684\u683C\u5F0F\u5316\u503C\\n  const getMomentValueFunc = (data: any, defaultFormat?: FormatTimeType) => {\\n    const format =\\n      convertResult ??\\n      defaultFormat ??\\n      ([Date_Picker, Range_Picker].includes(type) ? EnumDataType.YMD_HMS : EnumDataType.HMS);\\n    if (data instanceof Array) {\\n      return data.map((item, index) => {\\n        if (convertResult && typeof convertResult === 'function') {\\n          const obj = convertResult(item);\\n          if (obj) {\\n            return obj;\\n          } else {\\n            console.error('convertResult \u540C\u6B65\u65B9\u6CD5\u9700\u8981\u6709\u8FD4\u56DE\u503C\uFF01');\\n            return null;\\n          }\\n        } else if (\\n          typeof convertResult === 'string' &&\\n          [Unix, UnixValueOf].includes(convertResult)\\n        ) {\\n          return formatMomentFunc(item, convertResult, convertResult);\\n        } else if (type === Time_Range_Picker) {\\n          // \u65F6\u95F4\u533A\u95F4 \u9ED8\u8BA4\u8FD4\u56DE\uFF1A [HH:mm:ss,HH:mm:ss]\\n          return formatMomentFunc(item, format as FormatTimeType, convertResult);\\n        } else {\\n          // \u662F\u5426 \u5305\u542B \u65F6\u5206\u79D2\\n          // const hasDefault: boolean = isMoment(item) ? true : item?.split(' ')?.length > 0;\\n          return formatMomentFunc(\\n            item,\\n            showTime || convertResult\\n              ? (format as FormatTimeType)\\n              : // \u6CA1\u6709\u65F6\u5206\u79D2\u65F6 \u9ED8\u8BA4\u8FD4\u56DE\uFF1A [YYYY-MM-DD 00:00:00,YYYY-MM-DD 23:59:59]\\n              index === 0\\n              ? EnumDataType.YMD_START_TIME\\n              : EnumDataType.YMD_END_TIME,\\n            convertResult,\\n          );\\n        }\\n      });\\n    } else if (convertResult && typeof convertResult === 'function') {\\n      const obj = convertResult(data);\\n      if (obj) {\\n        return obj;\\n      } else {\\n        console.error('convertResult \u540C\u6B65\u65B9\u6CD5\u9700\u8981\u6709\u8FD4\u56DE\u503C\uFF01');\\n        return null;\\n      }\\n    } else {\\n      return formatMomentFunc(data, format as FormatTimeType, convertResult);\\n    }\\n  };\\n  /** \u683C\u5F0F\u5316\u6570\u636E\u4E3A\u5B57\u7B26\u4E32 */\\n  const formatToStrFun = (data: any) => {\\n    const format = [Date_Picker, Range_Picker].includes(type)\\n      ? EnumDataType.YMD_HMS\\n      : EnumDataType.HMS;\\n    const arr = [];\\n    if (data instanceof Array) {\\n      data.forEach((item) => {\\n        if (isMoment(item)) {\\n          arr.push(item.valueOf());\\n        } else if (Number.isInteger(item)) {\\n          arr.push(item);\\n        } else {\\n          arr.push(moment(item, format).valueOf());\\n        }\\n      });\\n    } else if (Number.isInteger(data)) {\\n      arr.push(data);\\n    } else {\\n      arr.push(moment(data, format).valueOf());\\n    }\\n    return arr;\\n  };\\n  const onChangeFunc = (data: any) => {\\n    if (!data) {\\n      onChange?.(null);\\n      setVal(null);\\n      return;\\n    }\\n    const formatResult = getMomentValueFunc(data);\\n    onChange?.(formatResult);\\n    setVal(data);\\n  };\\n  useEffect(() => {\\n    if (value) {\\n      // \u7236\u7EA7\u7684value\u53D8\u5316\u65F6\u624D\u5224\u65AD\\n      if (!val) {\\n        const momentValue = setValueToMomentFunc(value);\\n        onChangeFunc(momentValue);\\n      } else {\\n        const converPreValue = formatToStrFun(preValue).toString();\\n        const converValue = formatToStrFun(value).toString();\\n        // prop.value \u524D\u540E\u503C\u4E0D\u76F8\u7B49\uFF0C\u624D\u8D4B\u503C\\n        if (converPreValue !== converValue) {\\n          const momentValue = setValueToMomentFunc(value);\\n          onChangeFunc(momentValue);\\n        }\\n      }\\n    }\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n  }, [value]);\\n\\n  switch (type) {\\n    case Date_Picker:\\n      return (\\n        <DatePicker\\n          {...(fieldProps as DatePickerProps)}\\n          onChange={onChangeFunc}\\n          value={val as Moment}\\n        />\\n      );\\n    case Range_Picker:\\n      return (\\n        <DatePicker.RangePicker\\n          {...(fieldProps as RangePickerProps)}\\n          onChange={onChangeFunc}\\n          value={val as [Moment, Moment]}\\n        />\\n      );\\n    case Time_Picker:\\n      return (\\n        <TimePicker\\n          {...(fieldProps as TimePickerProps)}\\n          onChange={onChangeFunc}\\n          value={val as Moment}\\n        />\\n      );\\n    case Time_Range_Picker:\\n      return (\\n        <TimePicker.RangePicker\\n          {...(fieldProps as TimeRangePickerProps)}\\n          onChange={onChangeFunc}\\n          value={val as [Moment, Moment]}\\n        />\\n      );\\n    default:\\n      console.error('\u9519\u8BEF\u7684\u7C7B\u578B type\uFF1A', type);\\n      return null;\\n  }\\n};\\nTimeConvertWrap.displayName = 'TimeConvertWrap';\\nexport default memo(TimeConvertWrap);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/typings.ts?dumi-raw-code
/* harmony default export */ var typingsdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-10-09 11:00:31\\n * @Description: \u63A8\u5BFC\u5B9A\u4E49\\n * @LastModifiedBy: yihuang\\n */\\nimport React from 'react';\\nimport type {\\n  InputProps,\\n  SelectProps,\\n  DatePickerProps,\\n  CheckboxProps,\\n  InputNumberProps,\\n  RadioGroupProps,\\n  RateProps,\\n  SwitchProps,\\n  TimePickerProps,\\n  TimeRangePickerProps,\\n  UploadProps,\\n  AvatarProps,\\n  ImageProps,\\n  TagProps,\\n  ProgressProps,\\n  TreeSelectProps,\\n  CascaderProps,\\n  DividerProps,\\n} from 'antd';\\nimport type {\\n  SearchProps,\\n  TextAreaProps,\\n  PasswordProps,\\n  GroupProps as InputGroupProps,\\n} from 'antd/lib/input';\\nimport type { TextProps as TypographyTextProps } from 'antd/lib/typography/Text';\\nimport type { CheckboxGroupProps } from 'antd/lib/checkbox';\\nimport type { RangePickerProps } from 'antd/lib/date-picker';\\nimport type { SliderRangeProps, SliderSingleProps } from 'antd/lib/slider';\\nimport type { Moment } from 'moment';\\nimport type { IDesFieldProps } from './components/DescriptionWrap/typings';\\nimport type { IFormItem, ISchemaChildrenProps } from './components/SchemaForm/typings';\\n\\nexport type {\\n  ISchemaProps,\\n  ISchemaBaseProps,\\n  IFormItem,\\n  ISchemaChildrenProps,\\n} from './components/SchemaForm/typings';\\nexport type { IDescOption, IUrlMap, IDescProps } from './components/DescriptionWrap/typings';\\n/** \u83B7\u53D6type\u7684\u503C ValueOf<typeof T> */\\nexport type ValueOf<T> = T[keyof T];\\nexport type DataValuesType = Moment | [Moment, Moment];\\n/** Unix \u65F6\u95F4\u6233\uFF08\u81EA Unix \u7EAA\u5143\u4EE5\u6765\u7684\u79D2\u6570\uFF09 */\\nexport const Unix = 'unix';\\n/** Unix \u6BEB\u79D2\u65F6\u95F4\u6233\uFF08\u81EA Unix \u7EAA\u5143\u4EE5\u6765\u7684\u6BEB\u79D2\u6570\uFF09 */\\nexport const UnixValueOf = 'unixValueOf';\\n/** \u8FD4\u56DE Moment \u683C\u5F0F */\\nexport const MOMENT = 'moment';\\nexport const HMS = 'HH:mm:ss';\\nexport const HM = 'HH:mm';\\nexport const EnumDataType = {\\n  /** HH:mm:ss */\\n  HMS,\\n  /** YYYY:HH:mm:ss */\\n  YMD: 'YYYY-MM-DD',\\n  /** YYYY-MM-DD HH:mm:ss */\\n  YMD_HMS: 'YYYY-MM-DD HH:mm:ss',\\n  /** YYYY-MM-DD 00:00:00 */\\n  YMD_START_TIME: 'YYYY-MM-DD 00:00:00',\\n  /** YYYY-MM-DD 23:59:59 */\\n  YMD_END_TIME: 'YYYY-MM-DD 23:59:59',\\n} as const;\\n/** \u65E5\u671F\u7C7B\u578B */\\nexport type DataType = ValueOf<typeof EnumDataType>;\\n/** \u65E5\u671F\u53EF\u4EE5\u8F6C\u6362\u7684\u7C7B\u578B */\\nexport type FormatTimeType = DataType | typeof MOMENT | typeof Unix | typeof UnixValueOf;\\n/** \u652F\u6301\u8F6C\u6362\u7684\u7C7B\u578B */\\nexport type IConverTimeType = DataType | typeof Unix | typeof UnixValueOf | ((val: any) => any);\\n/** \u65E5\u671F\u7684 \u57FA\u7840\u53C2\u6570 */\\nexport interface IBasePickerProps {\\n  showTime?: boolean;\\n  /**\\n   * onChange\u7684\u65F6\u5019\u662F\u5426\u8981\u8F6C\u6362\u7ED3\u679C\uFF0C\u652F\u6301\uFF1A\u65E5\u671F\u3001Unix \u65F6\u95F4\u6233\u3001Unix \u6BEB\u79D2\u65F6\u95F4\u6233\u3001\u81EA\u5B9A\u4E49\u65B9\u6CD5: convertResult: (data) => moment(data).format('DD HH:mm:ss')\\n   */\\n  convertResult?: IConverTimeType;\\n}\\n/** \u7ED9 \u5916\u90E8\u5224\u65ADtype\u7528 */\\nexport const Date_Picker = 'datePicker';\\nexport const Range_Picker = 'rangePicker';\\nexport const Time_Picker = 'timePicker';\\nexport const Time_Range_Picker = 'timeRangePicker';\\n\\n/** \u6A21\u5F0F  \u53EA\u8BFB\uFF0C\u7F16\u8F91 */\\nexport type ModeType = 'read' | 'edit';\\n/** \u81EA\u5B9A\u4E49 */\\nexport type ICustom = 'custom';\\nexport type IDivider = 'divider';\\nexport type IDescriptions = 'descriptions';\\nexport type IText = 'text';\\nexport type ICheckbox = 'checkbox';\\nexport type ICheckboxGroup = 'checkboxGroup';\\nexport type IInput = 'input';\\nexport type IInputGroup = 'inputGroup';\\nexport type ISearch = 'search';\\nexport type ITextArea = 'textarea';\\nexport type IPassword = 'password';\\nexport type ISelect = 'select';\\nexport type ICascader = 'cascader';\\nexport type ITreeSelect = 'treeSelect';\\nexport type IDatePicker = typeof Date_Picker;\\nexport type IRangePicker = typeof Range_Picker;\\nexport type ITimePicker = typeof Time_Picker;\\nexport type ITimeRangePicker = typeof Time_Range_Picker;\\nexport type IInputNumber = 'inputNumber';\\nexport type IRadioGroup = 'radioGroup';\\nexport type IRate = 'rate';\\nexport type ISlider = 'slider';\\nexport type ISwitch = 'switch';\\nexport type IUpload = 'upload';\\nexport type IAvatar = 'avatar';\\nexport type IImage = 'image';\\nexport type ITag = 'tag';\\nexport type IProgress = 'progress';\\nexport type IFormItemGroup = 'group';\\nexport type IDateField = 'dateField';\\n/** \u6240\u6709\u7EC4\u4EF6\u7684\u7C7B\u578B */\\nexport type EnumElementType =\\n  | IDescriptions\\n  | IDivider\\n  | IText\\n  | IDateField\\n  | IInput\\n  | IInputGroup\\n  | ISearch\\n  | ITextArea\\n  | IPassword\\n  | ISelect\\n  | IInputNumber\\n  | IDatePicker\\n  | IRangePicker\\n  | ITimePicker\\n  | ITimeRangePicker\\n  | ICheckbox\\n  | ICheckboxGroup\\n  | IRadioGroup\\n  | IRate\\n  | ISlider\\n  | ISwitch\\n  | IUpload\\n  | IAvatar\\n  | IImage\\n  | ITag\\n  | IProgress\\n  | IFormItemGroup\\n  | ICascader\\n  | ITreeSelect;\\n/**  \u5168\u7C7B\u578B\uFF0C\u5305\u542B custom */\\nexport type EnumType = EnumElementType | ICustom;\\n\\n/** \u7EC4\u4EF6FieldProps\u7684\u901A\u7528\u53C2\u6570 */\\nexport interface IBaseFieldProps {\\n  /** form.item \u9700\u8981\u7684\u522B\u540D */\\n  valuePropName?: string;\\n  /** \u589E\u52A0\u53EA\u8BFB\u5C5E\u6027 */\\n  readOnly?: boolean;\\n  onChange?: (val?: any) => void;\\n}\\n/** \u6700\u57FA\u7840\u7684\u53C2\u6570\u7C7B\u578B */\\nexport interface IProps {\\n  /** props \u4F20\u5165\u7684\u503C */\\n  value?: any;\\n  /** \u5B57\u6BB5\u8F6C\u6362\u7684\u65F6\u5019\u9700\u8981\u7528ID\u627Evalue */\\n  id?: string;\\n  /** \u7EE7\u627F\u7684\u7C7B\u53BB\u5B9A\u4E49 */\\n  type?: EnumType;\\n  fieldProps?: IBaseFieldProps;\\n  render?: (values: ISchemaChildrenProps) => React.ReactNode;\\n  /** form\u4F20\u5165\u7684 */\\n  onChange?: (val?: any) => void;\\n}\\n\\n/* input \u7C7B\u578B */\\nexport type IInputProps = Omit<IProps, 'render' | 'type' | 'value' | 'fieldProps'> & {\\n  // \u9700\u8981\u52A0\u4E0Atype\uFF0Coverread\u7684\u65F6\u5019\u517C\u5BB9\\n  type?: IInput;\\n  value?: string | string[];\\n  onChange?: (e: any) => void;\\n  fieldProps?: InputProps &\\n    IBaseFieldProps & {\\n      /** \u662F\u5426\u5FFD\u7565\u7A7A\u683C \u9ED8\u8BA4 true */\\n      isTrim?: true | boolean;\\n    };\\n};\\n/** inputGroup */\\nexport type IInputGroupProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IInputGroup;\\n  fieldProps?: InputGroupProps &\\n    IBaseFieldProps & {\\n      /** Input.Group\u7684children\u6E32\u67D3\u5185\u5BB9 */\\n      children?: (props: ISchemaChildrenProps) => React.ReactNode;\\n    };\\n};\\n/* TextArea */\\nexport type ITextAreaProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ITextArea;\\n  fieldProps?: TextAreaProps & IBaseFieldProps;\\n};\\n\\n/* search */\\nexport type ISearchProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ISearch;\\n  fieldProps?: SearchProps &\\n    IBaseFieldProps & {\\n      /** \u662F\u5426\u5FFD\u7565\u7A7A\u683C \u9ED8\u8BA4 true */\\n      isTrim?: true | boolean;\\n    };\\n};\\n\\n/* password */\\nexport type IPasswordProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IPassword;\\n  fieldProps?: PasswordProps &\\n    IBaseFieldProps & {\\n      /** \u662F\u5426\u5FFD\u7565\u7A7A\u683C \u9ED8\u8BA4 true */\\n      isTrim?: true | boolean;\\n    };\\n};\\n\\n/* inputNumber */\\nexport type IInputNumberProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IInputNumber;\\n  fieldProps?: InputNumberProps & IBaseFieldProps;\\n};\\n\\n/** select \u7C7B\u578B */\\nexport type ISelectProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ISelect;\\n  fieldProps?: SelectProps<any> & IBaseFieldProps;\\n};\\n\\n/** datePicker \u7C7B\u578B */\\nexport type IDatePickerProps = Omit<IProps, 'render' | 'fieldProps' | 'type' | 'value'> & {\\n  type: IDatePicker;\\n  value?: number | string | Moment;\\n  fieldProps?: DatePickerProps & IBaseFieldProps & IBasePickerProps;\\n};\\n/** rangePicker \u7C7B\u578B */\\nexport type IRangePickerProps = Omit<IProps, 'render' | 'fieldProps' | 'type' | 'value'> & {\\n  type: IRangePicker;\\n  value?: [number, number] | [string, string] | [Moment, Moment];\\n  fieldProps?: RangePickerProps & IBaseFieldProps & IBasePickerProps;\\n};\\n/** timePicker \u7C7B\u578B */\\nexport type ITimePickerProps = Omit<IProps, 'render' | 'fieldProps' | 'type' | 'value'> & {\\n  type: ITimePicker;\\n  value?: number | string | Moment;\\n  fieldProps?: TimePickerProps & IBaseFieldProps & IBasePickerProps;\\n};\\n/** timeRangePicker \u7C7B\u578B */\\nexport type ITimeRangePickerProps = Omit<IProps, 'render' | 'fieldProps' | 'type' | 'value'> & {\\n  type: ITimeRangePicker;\\n  value?: [number, number] | [string, string] | [Moment, Moment];\\n  fieldProps?: TimeRangePickerProps & IBaseFieldProps & IBasePickerProps;\\n};\\n\\n/** checkbox \u7C7B\u578B */\\nexport type ICheckboxProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ICheckbox;\\n  fieldProps?: CheckboxProps & IBaseFieldProps;\\n};\\n\\n/** checkbox \u7C7B\u578B */\\nexport type ICheckboxGroupProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ICheckboxGroup;\\n  fieldProps?: CheckboxGroupProps & IBaseFieldProps;\\n};\\n/** RadioGroup */\\nexport type IRadioGroupProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IRadioGroup;\\n  fieldProps?: RadioGroupProps & IBaseFieldProps;\\n};\\n/** Rate */\\nexport type IRateProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IRate;\\n  fieldProps?: RateProps & IBaseFieldProps;\\n};\\n/** Slider */\\nexport type ISliderProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ISlider;\\n  fieldProps?: (SliderSingleProps | SliderRangeProps) & IBaseFieldProps;\\n};\\n/** Switch */\\nexport type ISwitchProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ISwitch;\\n  fieldProps?: SwitchProps & IBaseFieldProps;\\n};\\n/** Upload */\\nexport type IUploadProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IUpload;\\n  fieldProps?: UploadProps &\\n    IBaseFieldProps & {\\n      /** \u4E0A\u4F20\u7EC4\u4EF6\u663E\u793A\u7684\u5185\u5BB9\uFF1A<Button icon={<UploadOutlined />}>Click to Upload</Button> */\\n      children: (props: ISchemaChildrenProps) => React.ReactNode;\\n    };\\n};\\n/** Avatar */\\nexport type IAvatarProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IAvatar;\\n  fieldProps?: AvatarProps & IBaseFieldProps;\\n};\\n/** Image */\\nexport type IImageProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IImage;\\n  fieldProps?: ImageProps & IBaseFieldProps;\\n};\\n/** ITag */\\nexport type ITagProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ITag;\\n  fieldProps?: TagProps & IBaseFieldProps;\\n};\\n/** IProgress */\\nexport type IProgressProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: IProgress;\\n  fieldProps?: ProgressProps & IBaseFieldProps;\\n};\\n/** ITreeSelect */\\nexport type ITreeSelectProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ITreeSelect;\\n  fieldProps?: TreeSelectProps<any> & IBaseFieldProps;\\n};\\n/** ICascader */\\nexport type ICascaderProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ICascader;\\n  fieldProps?: CascaderProps<any> & IBaseFieldProps;\\n};\\n\\n// =========== \u975Eantd \u7EC4\u4EF6\u7684\u8F6C\u6362\u7C7B\u578B ===========\\n\\n/** \u6269\u5C55\u6587\u672C\u7C7B\u578B\u7684 fieldProps */\\nexport type IExtendFieldProps = {\\n  /** \u65F6\u95F4\u533A\u95F4 \u8F6C\u6362\u4E3A\u6587\u672C\u7684\u5206\u9694\u7B26 */\\n  separator?: string;\\n};\\n\\n/** IFormItemGroup \u81EA\u5B9A\u4E49item\u5206\u7EC4 */\\nexport type IFormItemGroupProps = Omit<IProps, 'fieldProps' | 'type'> & {\\n  type: IFormItemGroup;\\n  options: IFormItem[];\\n};\\n\\n/** \u63CF\u8FF0 */\\nexport type IDescriptionsProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type?: IDescriptions;\\n  fieldProps?: IDesFieldProps;\\n};\\n/** \u5206\u5272\u7EBF */\\nexport type IDividerProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type?: IDivider;\\n  fieldProps?: IBaseFieldProps & DividerProps;\\n};\\n/** custom \u7C7B\u578B */\\nexport type ICustomProps = Omit<IProps, 'render' | 'fieldProps' | 'type'> & {\\n  type: ICustom;\\n  /** \u81EA\u884C\u6E32\u67D3\u7684\u7EC4\u4EF6 */\\n  render: (props: ISchemaChildrenProps) => React.ReactNode;\\n};\\n/** text \u7C7B\u578B */\\nexport type ITextProps = Omit<IProps, 'render' | 'value' | 'type' | 'fieldProps'> & {\\n  // \u9700\u8981\u52A0\u4E0Atype\uFF0Coverread\u7684\u65F6\u5019\u517C\u5BB9\\n  type?: IText;\\n  value?: string;\\n  fieldProps?: IBaseFieldProps & TypographyTextProps;\\n};\\n\\n/** IDateField */\\nexport type IDateFieldProps = Omit<IProps, 'render' | 'value' | 'type' | 'fieldProps'> &\\n  (IDatePickerProps | ITimePickerProps | IRangePickerProps | ITimeRangePickerProps) & {\\n    fieldProps?: IBasePickerProps & IExtendFieldProps;\\n  };\\n\\n/* ITimeConvertProps \u65E5\u671F\u8F6C\u6362 */\\nexport type ITimeConvertProps = Omit<IProps, 'render' | 'type' | 'value' | 'fieldProps'> & {\\n  type: ITimeRangePicker | ITimePicker | IRangePicker | IDatePicker;\\n  value?: string | string[] | DataValuesType | number | [number, number];\\n  onChange?: (e: any) => void;\\n  fieldProps?: (DatePickerProps | RangePickerProps | TimePickerProps | TimeRangePickerProps) &\\n    IBaseFieldProps &\\n    IBasePickerProps;\\n};\\n\\n/** \u4E0B\u62C9-\u6587\u672C\u7C7B\u578B \u589E\u52A0\u5206\u9694\u7B26 */\\nexport type ISelectFieldProps = Omit<ISelectProps, 'type' | 'fieldProps'> & {\\n  type?: ISelect;\\n  fieldProps?: SelectProps<any> & IBaseFieldProps & IExtendFieldProps;\\n};\\n/** \u4E0B\u62C9\u6811-\u6587\u672C\u7C7B\u578B \u589E\u52A0\u5206\u9694\u7B26 */\\nexport type ITreeSelectFieldProps = Omit<ITreeSelectProps, 'type' | 'fieldProps'> & {\\n  type?: ITreeSelect;\\n  fieldProps?: TreeSelectProps<any> & IBaseFieldProps & IExtendFieldProps;\\n};\\n/** \u7EA7\u8054-\u6587\u672C\u7C7B\u578B \u589E\u52A0\u5206\u9694\u7B26 */\\nexport type ICascaderFieldProps = Omit<ICascaderProps, 'type' | 'fieldProps'> & {\\n  type?: ICascader;\\n  fieldProps?: CascaderProps<any> & IBaseFieldProps & IExtendFieldProps;\\n};");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/utils.ts?dumi-raw-code
/* harmony default export */ var src_utilsdumi_raw_code = ("import {\\n  FormatTimeType,\\n  Unix,\\n  UnixValueOf,\\n  MOMENT,\\n  HMS,\\n  DataType,\\n  IConverTimeType,\\n} from './typings';\\nimport moment, { isMoment } from 'moment';\\n// \u8F6C\u6362\u4E3A \u65E5\u671F\u7684\u683C\u5F0F\u5316\u503C\\nconst formatMomentFunc = (item: any, format: FormatTimeType, convertResult?: IConverTimeType) => {\\n  switch (format) {\\n    case Unix:\\n      // \u65F6\u95F4\u6233 \u79D2\\n      return isMoment(item) ? item.unix() : moment(item).unix();\\n    case UnixValueOf:\\n      // \u65F6\u95F4\u6233 \u6BEB\u79D2\\n      return isMoment(item) ? item.valueOf() : moment(item).valueOf();\\n    case MOMENT:\\n      // moment\\n      return isMoment(item) ? item : moment(item);\\n    case HMS:\\n      return isMoment(item) ? item.format(HMS) : moment(item, HMS).format(HMS);\\n    default:\\n      if (typeof item === 'string') {\\n        return item;\\n      } else if (isMoment(item)) {\\n        return item.format((convertResult as DataType) ?? format);\\n      } else if (Number.isInteger(item)) {\\n        return moment(item).unix();\\n      } else {\\n        return moment(item).format(format);\\n      }\\n    // return typeof item === 'string'\\n    //   ? item\\n    //   : isMoment(item)\\n    //   ? item.format((convertResult as DataType) ?? format)\\n    //   : Number.isInteger(item)\\n    //   ? moment(item).unix();\\n    //   : moment(item).format(format);\\n  }\\n};\\nexport { formatMomentFunc };");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/hooks/usePrevious/index.tsx?dumi-raw-code
/* harmony default export */ var usePreviousdumi_raw_code = ("import { useEffect, useRef } from 'react';\\n// Hook\\nconst usePrevious = (value: any) => {\\n  const ref = useRef();\\n  useEffect(() => {\\n    ref.current = value;\\n  }, [value]);\\n  return ref.current;\\n};\\nexport default usePrevious;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/InputWrap.tsx?dumi-raw-code
/* harmony default export */ var InputWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-12-01 14:29:27\\n * @Description: \u9ED8\u8BA4\u5C4F\u853D\u7A7A\u683C\u7684Input\u7EC4\u4EF6\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport type { IInputProps } from '../typings';\\nimport { Input } from 'antd';\\nimport { converChangeEvent } from './SchemaForm/utils';\\n\\n/** \u9ED8\u8BA4\u5C4F\u853D\u7A7A\u683C\u7684Input\u7EC4\u4EF6 */\\nconst InputWrap = ({ onChange, value, fieldProps = {} }: IInputProps) => {\\n  /** input\u7684\u503C */\\n  const [inputVal, setInputVal] = useState(value);\\n  /** \u9ED8\u8BA4\u5C4F\u853D\u7A7A\u683C */\\n  const { isTrim = true, ...fieldResetProps } = fieldProps;\\n  /** \u8F6C\u6362\u503C */\\n  const onChangeFun = (params: any) => {\\n    const str = converChangeEvent(params);\\n    setInputVal(str);\\n    onChange?.(str);\\n  };\\n  /** \u5931\u7126\u53BB\u7A7A\u683C */\\n  const onBlurFun = () => {\\n    let str: any = inputVal;\\n    if (isTrim && (str !== null || str !== undefined)) {\\n      if (str instanceof Array) {\\n        str = str.map((item) => {\\n          const v = item?.trim();\\n          return v === '' ? null : v;\\n        });\\n      } else {\\n        const v = str?.trim();\\n        str = v === '' ? null : v;\\n      }\\n    }\\n    setInputVal(str);\\n    onChange?.(str);\\n  };\\n  useEffect(() => {\\n    if (value && value !== inputVal) {\\n      onChangeFun(value);\\n    }\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n  }, [value]);\\n\\n  return (\\n    <Input\\n      allowClear\\n      maxLength={200}\\n      {...fieldResetProps}\\n      value={inputVal}\\n      onChange={onChangeFun}\\n      onPressEnter={onBlurFun}\\n      onBlur={onBlurFun}\\n    />\\n  );\\n};\\nInputWrap.displayName = 'InputWrap';\\nexport default InputWrap;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/Text.tsx?dumi-raw-code
/* harmony default export */ var Textdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-12-01 14:07:25\\n * @Description: \u53EA\u8BFB\u6587\u672C\uFF0C\u8D85\u957F\u7701\u7565\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { memo } from 'react';\\nimport { Typography } from 'antd';\\nimport type { ITextProps } from '../typings';\\n\\nconst Text = ({ value, fieldProps }: ITextProps) => {\\n  const { ellipsis = true, style, className } = fieldProps ?? {};\\n  return (\\n    <Typography.Text\\n      ellipsis={\\n        ellipsis\\n          ? {\\n              tooltip: ellipsis,\\n            }\\n          : false\\n      }\\n      style={style}\\n      className={className}\\n    >\\n      {value}\\n    </Typography.Text>\\n  );\\n};\\nexport default memo(Text);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/DescriptionWrap/index.tsx?dumi-raw-code
/* harmony default export */ var DescriptionWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-25 16:37:20\\n * @Description: \u63CF\u8FF0\u7C7B\u578B\u7684\u7EC4\u4EF6\uFF0C\u540E\u671F\u653E\u5165SchemaForm\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React from 'react';\\nimport { Descriptions } from 'antd';\\nimport { IDesFieldProps } from './typings';\\n// import { useRequest } from 'ahooks';\\n\\nconst { Item } = Descriptions;\\n\\ninterface IProps {\\n  fieldProps?: IDesFieldProps;\\n}\\n// TODO \u8FDC\u7A0B\u8BF7\u6C42\uFF0C\u5F85\u7EDF\u4E00\u5904\u7406\\n// type IRemoteProps = Omit<IDescProps, 'urlMap'> & {\\n//   urlMap: IUrlMap;\\n// };\\n\\n// const RemoteDescription = forwardRef(({ urlMap, options, ...reset }: IRemoteProps) => {\\n//   const [data, setData] = useState<any>([]);\\n//   useRequest(() => queryInfo(urlMap), {\\n//     onSuccess: (data: any[]) => {\\n//       if (data?.length) {\\n//         const arr: any[] = [];\\n//         options.forEach((item) => {\\n//           const row = data.find((list) => list.code === item.code);\\n//           if (row) {\\n//             arr.push({\\n//               ...item,\\n//               value: row.value,\\n//             });\\n//           }\\n//         });\\n//         setData(arr);\\n//       }\\n//     },\\n//   });\\n//   return <DescriptionInfo {...reset} options={data} />;\\n// });\\nconst DescriptionInfo = ({ options, ...reset }: IDesFieldProps) => {\\n  return (\\n    <Descriptions\\n      column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\\n      layout=\\"horizontal\\"\\n      bordered\\n      size=\\"small\\"\\n      {...reset}\\n    >\\n      {options?.length\\n        ? options.map((item, index) => {\\n            return (\\n              <Item key={\`\${item.code}_\${index}\`} label={item.label}>\\n                {item.value}\\n              </Item>\\n            );\\n          })\\n        : null}\\n    </Descriptions>\\n  );\\n};\\n\\nconst DescriptionWrap = ({ fieldProps }: IProps) => {\\n  return (\\n    <DescriptionInfo {...fieldProps} />\\n    // <>\\n    //   {urlMap ? <RemoteDescription urlMap={urlMap} {...reset} /> : <DescriptionInfo {...reset} />}\\n    // </>\\n  );\\n};\\nexport default DescriptionWrap;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/index.tsx?dumi-raw-code
/* harmony default export */ var SchemaFormdumi_raw_code = ("import React, { useEffect, useState } from 'react';\\nimport { Form } from 'antd';\\nimport { ISchemaProps } from './typings';\\nimport RowLayout from './RowLayout';\\nimport CustomLayout from './CustomLayout';\\n\\nconst SchemaForm = ({ type = 'row', ...resetProps }: ISchemaProps) => {\\n  const { options = [], form, ...formReset } = resetProps;\\n  const [initialValues, setInitialValues] = useState(resetProps.initialValues);\\n  useEffect(() => {\\n    if (resetProps?.initialValues) {\\n      setInitialValues(resetProps?.initialValues);\\n    }\\n  }, [resetProps?.initialValues]);\\n  return (\\n    <>\\n      {options?.length ? (\\n        <Form initialValues={initialValues} scrollToFirstError={true} {...formReset} form={form}>\\n          {type === 'row' ? (\\n            <RowLayout type={type} {...resetProps} />\\n          ) : (\\n            <CustomLayout type={type} {...resetProps} />\\n          )}\\n        </Form>\\n      ) : null}\\n    </>\\n  );\\n};\\nSchemaForm.displayName = 'SchemaForm';\\nexport default SchemaForm;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/RowLayout.tsx?dumi-raw-code
/* harmony default export */ var RowLayoutdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-17 16:18:25\\n * @Description: \u9ED8\u8BA4\u4F7F\u7528 row \u5E03\u5C40\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { memo } from 'react';\\nimport { Col, Row } from 'antd';\\nimport { FormProps } from 'antd/lib/form';\\nimport { ISchemaProps } from './typings';\\nimport ItemGroupWrap from './ItemGroupWrap';\\nimport ItemWrap from './ItemWrap';\\nimport omit from '../../javascript/omit';\\n\\nconst RowLayout = ({\\n  options = [],\\n  disabled: formDisabled,\\n  readOnly: formReadonly,\\n  form,\\n  ...formReset\\n}: FormProps & ISchemaProps) => {\\n  const { gutter = 16, span = 6 } = formReset as any;\\n  return (\\n    <Row gutter={gutter}>\\n      {options.map(({ col, ...reset }, index) => {\\n        const colProps = omit(reset, ['fieldProps', 'labelCol', 'wrapperCol', 'render']);\\n        return (\\n          <Col {...colProps} span={col ?? span} key={reset?.name?.toString() ?? index.toString()}>\\n            {reset.type === 'group' ? (\\n              <ItemGroupWrap\\n                {...reset}\\n                formDisabled={formDisabled}\\n                formReadonly={formReadonly}\\n                initialValues={formReset.initialValues}\\n              />\\n            ) : (\\n              <ItemWrap\\n                {...reset}\\n                values={reset?.name && formReset?.initialValues?.[reset?.name as any]}\\n                formDisabled={formDisabled}\\n                formReadonly={formReadonly}\\n                initialValues={formReset.initialValues}\\n              />\\n            )}\\n          </Col>\\n        );\\n      })}\\n    </Row>\\n  );\\n};\\nexport default memo(RowLayout);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/ItemGroupWrap.tsx?dumi-raw-code
/* harmony default export */ var ItemGroupWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-21 16:55:00\\n * @Description: \u8282\u70B9\u7EC4\u7684\u5305\u88F9\u5668\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { CSSProperties, memo } from 'react';\\nimport ItemWrap from './ItemWrap';\\nimport type { IFormInheritProps, IFormItem } from './typings';\\n\\ninterface IProps extends IFormInheritProps {\\n  options: IFormItem[];\\n  className?: string;\\n  style?: CSSProperties;\\n}\\n\\nconst ItemGroupWrap = ({\\n  className,\\n  style,\\n  options,\\n  formDisabled,\\n  formReadonly,\\n  initialValues,\\n}: IProps) => {\\n  return (\\n    <div className={className} style={style}>\\n      {options?.length\\n        ? options.map((item, index) => (\\n            <ItemWrap\\n              key={item?.name?.toString() ?? index.toString()}\\n              {...item}\\n              values={item?.name && initialValues?.[item?.name as any]}\\n              formDisabled={formDisabled}\\n              formReadonly={formReadonly}\\n              initialValues={initialValues}\\n            />\\n          ))\\n        : null}\\n    </div>\\n  );\\n};\\nexport default memo(ItemGroupWrap);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/ItemWrap.tsx?dumi-raw-code
/* harmony default export */ var ItemWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-21 16:49:01\\n * @Description: item\u8282\u70B9\u5305\u88F9\u5668\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { memo } from 'react';\\nimport { Form } from 'antd';\\nimport { IItemWrapProps } from './typings';\\nimport { Element, Field } from '../../index';\\nimport RenderWrap from './RenderWrap';\\n\\nconst { Item } = Form;\\n\\nconst ItemWrap = ({\\n  formDisabled,\\n  formReadonly,\\n  initialValues,\\n  values,\\n  render,\\n  type,\\n  width = '100%',\\n  fieldProps = {},\\n  ...reset\\n}: IItemWrapProps) => {\\n  const { disabled, readOnly, ...resetFieldProps } = fieldProps as any;\\n  return (\\n    <Item {...reset}>\\n      {type === 'custom' ? (\\n        // \u81EA\u5B9A\u4E49\u7684\u4F7F\u7528\u5916\u90E8\u7EC4\u4EF6\\n        <RenderWrap\\n          {...reset}\\n          fieldProps={resetFieldProps}\\n          values={values}\\n          render={render}\\n          disabled={disabled ?? formDisabled}\\n          readOnly={readOnly ?? formReadonly}\\n          initialValues={initialValues}\\n        />\\n      ) : readOnly ?? formReadonly ? (\\n        <Field\\n          {...reset}\\n          fieldProps={\\n            {\\n              ...resetFieldProps,\\n              value: values,\\n            } as any\\n          }\\n          type={type as any}\\n        />\\n      ) : (\\n        // \u900F\u4F20\\n        <Element\\n          style={['checkbox', 'switch', 'tag'].includes(type) ? undefined : { width }}\\n          {...reset}\\n          fieldProps={\\n            {\\n              ...resetFieldProps,\\n              value: values,\\n              disabled: disabled ?? formDisabled,\\n            } as any\\n          }\\n          type={type as any}\\n        />\\n      )}\\n    </Item>\\n  );\\n};\\nexport default memo(ItemWrap);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/RenderWrap.tsx?dumi-raw-code
/* harmony default export */ var RenderWrapdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-03-01 11:39:38\\n * @Description: \u81EA\u5B9A\u4E49\u6E32\u67D3\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport { ISchemaChildrenProps } from './typings';\\nimport { converChangeEvent } from './utils';\\n\\ninterface IProps extends ISchemaChildrenProps {\\n  values?: any;\\n  render?: (props: ISchemaChildrenProps) => React.ReactNode;\\n}\\n\\nconst RenderWrap = ({\\n  disabled,\\n  readOnly,\\n  render,\\n  values,\\n  value,\\n  initialValues,\\n  onChange,\\n  fieldProps,\\n}: IProps) => {\\n  const [val, setVal] = useState();\\n  const onChangeFunc = (params: any) => {\\n    const str = converChangeEvent(params);\\n    setVal(str);\\n    fieldProps?.onChange?.(str);\\n    onChange?.(str);\\n  };\\n  useEffect(() => {\\n    setVal(values);\\n  }, [values]);\\n  useEffect(() => {\\n    setVal(fieldProps.value);\\n  }, [fieldProps.value]);\\n  useEffect(() => {\\n    setVal(value);\\n  }, [value]);\\n  return (\\n    <>\\n      {render?.({\\n        value: val,\\n        onChange: onChangeFunc,\\n        disabled,\\n        readOnly,\\n        initialValues,\\n      })}\\n    </>\\n  );\\n};\\nexport default RenderWrap;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/javascript/omit.ts?dumi-raw-code
/* harmony default export */ var omitdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-19 17:18:56\\n * @Description: \u8FC7\u6EE4\u5BF9\u8C61\u4E2D\u7684\u5B57\u6BB5\\n * const colProps = omit(reset, ['fieldProps', 'labelCol', 'wrapperCol', 'render']);\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nconst omit = (obj: object, fields: any[]) => {\\n  const shallowCopy = { ...obj };\\n  for (let i = 0; i < fields.length; i += 1) {\\n    const key = fields[i];\\n    delete shallowCopy[key];\\n  }\\n  return shallowCopy;\\n};\\n\\nexport default omit;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SchemaForm/CustomLayout.tsx?dumi-raw-code
/* harmony default export */ var CustomLayoutdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-17 16:18:42\\n * @Description: \u81EA\u5B9A\u4E49\u5E03\u5C40\uFF0C\u53EF\u4EE5\u4F7F\u7528group\u6DF7\u5408\u5E03\u5C40\u3002\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { Fragment, memo } from 'react';\\nimport { FormProps } from 'antd/lib/form';\\nimport { ISchemaProps, IFormItem } from './typings';\\nimport ItemWrap from './ItemWrap';\\nimport ItemGroupWrap from './ItemGroupWrap';\\n\\nconst CustomLayout = ({\\n  options = [],\\n  disabled: formDisabled,\\n  readOnly: formReadonly,\\n  form,\\n  ...formReset\\n}: FormProps & ISchemaProps) => {\\n  return (\\n    <>\\n      {options.map((item: IFormItem, index) => {\\n        return (\\n          <Fragment key={item?.name?.toString() ?? index.toString()}>\\n            {item.type === 'group' ? (\\n              <ItemGroupWrap\\n                {...item}\\n                formReadonly={formReadonly}\\n                formDisabled={formDisabled}\\n                initialValues={formReset.initialValues}\\n              />\\n            ) : (\\n              <ItemWrap\\n                {...item}\\n                values={item?.name && formReset?.initialValues?.[item?.name as any]}\\n                formDisabled={formDisabled}\\n                formReadonly={formReadonly}\\n                initialValues={formReset.initialValues}\\n              />\\n            )}\\n          </Fragment>\\n        );\\n      })}\\n    </>\\n  );\\n};\\nexport default memo(CustomLayout);");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/Field.tsx?dumi-raw-code
/* harmony default export */ var Fielddumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-11-30 18:27:39\\n * @Description: \u5B57\u6BB5\u7C7B\u578B \u5305\u542B \u53EA\u8BFB\u3001\u7F16\u8F91\\n * @LastModifiedBy: yihuang\\n */\\n\\nimport React, { useState, useEffect } from 'react';\\nimport {\\n  Avatar,\\n  Checkbox,\\n  Divider,\\n  Image,\\n  Input,\\n  Progress,\\n  Radio,\\n  Rate,\\n  Slider,\\n  Switch,\\n  Tag,\\n  Upload,\\n} from 'antd';\\nimport type {\\n  ICustomProps,\\n  IDatePickerProps,\\n  IInputGroupProps,\\n  IInputNumberProps,\\n  IInputProps,\\n  IPasswordProps,\\n  IProps,\\n  IRangePickerProps,\\n  ISearchProps,\\n  ISelectFieldProps,\\n  ITagProps,\\n  ITextAreaProps,\\n  ITextProps,\\n  ITimePickerProps,\\n  ITimeRangePickerProps,\\n  ITreeSelectFieldProps,\\n  ICascaderFieldProps,\\n  IDividerProps,\\n  IDescriptionsProps,\\n} from '../typings';\\nimport DateField from './DateField';\\nimport Text from './Text';\\nimport SelectField from './SelectField';\\nimport TreeSelectField from './TreeSelectField';\\nimport CascaderField from './CascaderField';\\nimport DescriptionWrap from './DescriptionWrap';\\n\\n/** descriptions */\\nfunction Field(props: IDescriptionsProps): JSX.Element;\\n/** divider */\\nfunction Field(props: IDividerProps): JSX.Element;\\n/** text */\\nfunction Field(props: ITextProps): JSX.Element;\\n/** input */\\nfunction Field(props: IInputProps): JSX.Element;\\n/** inputGroup */\\nfunction Field(props: IInputGroupProps): JSX.Element;\\n/** textarea */\\nfunction Field(props: ITextAreaProps): JSX.Element;\\n/** search */\\nfunction Field(props: ISearchProps): JSX.Element;\\n/** password */\\nfunction Field(props: IPasswordProps): JSX.Element;\\n/** InputNumber */\\nfunction Field(props: IInputNumberProps): JSX.Element;\\n/** datePicker */\\nfunction Field(props: IDatePickerProps): JSX.Element;\\n/** rangePicker */\\nfunction Field(props: IRangePickerProps): JSX.Element;\\n/** timePicker */\\nfunction Field(props: ITimePickerProps): JSX.Element;\\n/** TimeRangePicker */\\nfunction Field(props: ITimeRangePickerProps): JSX.Element;\\n/** Tag */\\nfunction Field(props: ITagProps): JSX.Element;\\n/** Custom */\\nfunction Field(props: ICustomProps): JSX.Element;\\n/** Select */\\nfunction Field(props: ISelectFieldProps): JSX.Element;\\n/** TreeSelect */\\nfunction Field(props: ITreeSelectFieldProps): JSX.Element;\\n/** Cascader */\\nfunction Field(props: ICascaderFieldProps): JSX.Element;\\nfunction Field({ type, render, fieldProps, ...resetProps }: IProps) {\\n  const { children, value, ...resetFieldProps } = (fieldProps as any) ?? {};\\n  const [val, setVal] = useState(value ?? resetProps.value);\\n\\n  useEffect(() => {\\n    setVal(value);\\n  }, [value]);\\n  // \u8868\u5355\u91CD\u7F6E\u7684\u65F6\u5019\u503C\u4E3A resetProps.value\\n  useEffect(() => {\\n    setVal(resetProps.value);\\n  }, [resetProps.value]);\\n\\n  switch (type) {\\n    case 'descriptions':\\n      return <DescriptionWrap fieldProps={resetFieldProps} />;\\n    // \u65E5\u671F\u7C7B\u578B\u505A\u4E00\u5C42\u6570\u636E\u8F6C\u6362\\n    case 'datePicker':\\n    case 'rangePicker':\\n    case 'timePicker':\\n    case 'timeRangePicker':\\n      return <DateField fieldProps={fieldProps as any} value={val} type={type} />;\\n    case 'tag':\\n      return (\\n        <Tag color=\\"default\\" {...fieldProps} closable={false}>\\n          {children\\n            ? children({\\n                value: val,\\n              })\\n            : val}\\n        </Tag>\\n      );\\n    case 'avatar':\\n      return <Avatar {...resetFieldProps} src={val} />;\\n    case 'image':\\n      return <Image {...resetFieldProps} preview={false} src={val} />;\\n    case 'checkbox':\\n      return <Checkbox {...resetFieldProps} disabled={true} checked={val} />;\\n    case 'checkboxGroup':\\n      return <Checkbox.Group {...resetFieldProps} disabled={true} value={val} />;\\n    case 'radioGroup':\\n      return <Radio.Group {...resetFieldProps} disabled={true} value={val} />;\\n    case 'rate':\\n      return <Rate {...resetFieldProps} disabled={true} value={val} />;\\n    case 'slider':\\n      return <Slider {...resetFieldProps} disabled={true} value={val} />;\\n    case 'switch':\\n      return <Switch {...resetFieldProps} disabled={true} checked={val} />;\\n    case 'progress':\\n      return <Progress {...resetFieldProps} percent={val} />;\\n    case 'upload':\\n      return (\\n        <Upload\\n          {...resetFieldProps}\\n          fileList={val}\\n          disabled={true}\\n          showUploadList={{\\n            showPreviewIcon: false,\\n            showRemoveIcon: false,\\n            showDownloadIcon: false,\\n          }}\\n        >\\n          {children?.({\\n            ...resetFieldProps,\\n            value: val,\\n            disabled: true,\\n          })}\\n        </Upload>\\n      );\\n    case 'text':\\n    case 'textarea':\\n    case 'input':\\n    case 'search':\\n    case 'inputNumber':\\n    case 'inputGroup':\\n      return <Text fieldProps={fieldProps as any} value={val} />;\\n    case 'password':\\n      return (\\n        <Input.Password\\n          {...resetFieldProps}\\n          visibilityToggle={false}\\n          bordered={false}\\n          disabled={true}\\n          value={val}\\n        />\\n      );\\n    case 'select':\\n      return <SelectField fieldProps={fieldProps} value={val} />;\\n    case 'treeSelect':\\n      return <TreeSelectField fieldProps={fieldProps} value={val} />;\\n    case 'cascader':\\n      return <CascaderField fieldProps={fieldProps} value={val} />;\\n    case 'divider':\\n      return <Divider {...resetFieldProps} />;\\n    case 'custom':\\n      return render?.({\\n        value: val,\\n      });\\n    default:\\n      // \u4E3A\u4EE5\u540E\u505A\u517C\u5BB9 \u672A\u8BC6\u522B\u7684\u7C7B\u578B \u4E5F\u8F6C\u6362\\n      return <>{val?.toString()}</>;\\n  }\\n}\\nField.displayName = 'Field';\\nexport default Field;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/DateField.tsx?dumi-raw-code
/* harmony default export */ var DateFielddumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-14 16:57:35\\n * @Description: \u65E5\u671F \u8F6C\u6362\u4E3A \u9759\u6001\u6587\u672C\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useMemo } from 'react';\\nimport {\\n  IDateFieldProps,\\n  Date_Picker,\\n  Range_Picker,\\n  Time_Picker,\\n  Time_Range_Picker,\\n  EnumDataType,\\n} from '../typings';\\nimport { formatMomentFunc } from '../utils';\\nimport { isMoment } from 'moment';\\n\\nconst DateField = ({ value, type, fieldProps }: IDateFieldProps) => {\\n  const { convertResult, separator = '-' } = fieldProps ?? {};\\n\\n  const time = useMemo(() => {\\n    if (convertResult && typeof convertResult === 'function') {\\n      return convertResult(value);\\n    }\\n    if (!value) {\\n      return '';\\n    }\\n    const arr: any[] = [];\\n    switch (type) {\\n      case Date_Picker:\\n        return formatMomentFunc(value, convertResult ?? EnumDataType.YMD_HMS);\\n      case Time_Picker:\\n        return isMoment(value)\\n          ? value.format(convertResult ?? EnumDataType.HMS)\\n          : formatMomentFunc(value, convertResult ?? EnumDataType.HMS);\\n      case Range_Picker:\\n        (value as any[]).map((time) => {\\n          arr.push(formatMomentFunc(time, convertResult ?? EnumDataType.YMD_HMS));\\n        });\\n        return arr.join(separator);\\n      case Time_Range_Picker:\\n        (value as any[]).map((time) => {\\n          if (isMoment(time)) {\\n            arr.push(time.format(convertResult ?? EnumDataType.HMS));\\n          } else {\\n            arr.push(formatMomentFunc(time, convertResult ?? EnumDataType.HMS));\\n          }\\n        });\\n        return arr.join(separator);\\n      default:\\n        throw new Error(\`\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684type\u7C7B\u578B: \${type}\`);\\n    }\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n  }, [value]);\\n  return <>{time}</>;\\n};\\nDateField.displayName = 'DateField';\\nexport default DateField;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/SelectField.tsx?dumi-raw-code
/* harmony default export */ var SelectFielddumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-19 15:37:05\\n * @Description: \u4E0B\u62C9\u9009\u62E9\u7684\u53EA\u8BFB\u6587\u6848\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport { ISelectFieldProps } from '../typings';\\nimport { deepEach } from '../javascript';\\nimport { DefaultOptionType } from 'antd/lib/select';\\nimport Text from './Text';\\n\\nconst SelectField = ({ value: selectValue, fieldProps }: ISelectFieldProps) => {\\n  const [pathNames, setPathNames] = useState('');\\n  const { separator = '/', fieldNames } = fieldProps ?? {};\\n  const options = fieldNames?.options ? fieldProps?.[fieldNames?.options] : fieldProps?.options;\\n  useEffect(() => {\\n    if (options?.length && selectValue) {\\n      const arr: any[] = [];\\n      const { label = 'label', value = 'value' } = fieldNames ?? {};\\n      deepEach(\\n        options,\\n        (item: DefaultOptionType) => {\\n          if (selectValue instanceof Array) {\\n            const row: DefaultOptionType = selectValue.find((val) => val === item[value]);\\n            if (row) {\\n              arr.push(item.label);\\n            }\\n          } else if (selectValue === item[value]) {\\n            arr.push(item[label]);\\n          }\\n        },\\n        fieldNames?.options ?? 'children',\\n      );\\n      setPathNames(arr.join(separator));\\n    } else {\\n      setPathNames('');\\n    }\\n  }, [options, selectValue, separator, fieldNames]);\\n  return (\\n    <Text\\n      fieldProps={{\\n        style: fieldProps?.style,\\n        className: fieldProps?.className,\\n      }}\\n      value={pathNames}\\n    />\\n  );\\n};\\nSelectField.displayName = 'TreeSelectField';\\nexport default SelectField;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/javascript/index.ts?dumi-raw-code
/* harmony default export */ var javascriptdumi_raw_code = ("export { default as deepEach } from './deepEach';\\nexport { default as omit } from './omit';");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/javascript/deepEach.ts?dumi-raw-code
/* harmony default export */ var deepEachdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-03-12 10:59:40\\n * @Description: \u6DF1\u5EA6\u8FED\u4EE3\u67E5\u8BE2\\n * @LastModifiedBy: yihuang\\n */\\n/**\\n * @param data any[]\\n * @param callback any\\n * @param childName default:  children\\n * @return any[]\\n * deepEach(arr, (item, children) => {\\n      item.value = xx;\\n  },'childName');\\n * \u9ED8\u8BA4\u4F7F\u7528\u526F\u672C,\u5728callback\u5904\u7406\u6570\u636E\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528\u526F\u672C\uFF0C\u90A3\u4E48\u9700\u8981\u91CD\u65B0\u5BF9treeData\u8D4B\u503C\\n    treeData = deepEach(treeData, (item, children) => {\\n        item.value = xx;\\n    });\\n */\\nconst deepEach = (data: any[], callback: any, childName = 'children') => {\\n  let current;\\n  let children = [];\\n  for (let i = 0, len = data.length; i < len; i += 1) {\\n    current = data[i];\\n    children = [];\\n    if (current && current[childName] && current[childName].length) {\\n      children = current[childName];\\n    }\\n    if (callback) {\\n      callback(current, children, i);\\n    }\\n    if (children.length > 0) {\\n      deepEach(children, callback, childName);\\n    }\\n  }\\n};\\nexport default deepEach;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/TreeSelectField.tsx?dumi-raw-code
/* harmony default export */ var TreeSelectFielddumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-19 15:37:05\\n * @Description: \u4E0B\u62C9\u6811 \u7684\u53EA\u8BFB\u6587\u6848\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport { ITreeSelectFieldProps } from '../typings';\\nimport { deepEach } from '../javascript';\\nimport { DefaultOptionType } from 'antd/lib/select';\\nimport Text from './Text';\\n\\nconst TreeSelectField = ({ value: selectValue, fieldProps }: ITreeSelectFieldProps) => {\\n  const [pathNames, setPathNames] = useState('');\\n  const { separator = '/', fieldNames } = fieldProps ?? {};\\n  const options = fieldNames?.children ? fieldProps?.[fieldNames?.children] : fieldProps?.treeData;\\n  useEffect(() => {\\n    if (options?.length && selectValue) {\\n      const arr: any[] = [];\\n      const { label = 'title', value = 'value' } = fieldNames ?? {};\\n      deepEach(\\n        options,\\n        (item: DefaultOptionType) => {\\n          if (selectValue instanceof Array) {\\n            const row: DefaultOptionType = selectValue.find((val) => val === item[value]);\\n            if (row) {\\n              arr.push(item[label]);\\n            }\\n          } else if (selectValue === item[value]) {\\n            arr.push(item[label]);\\n          }\\n        },\\n        fieldNames?.children ?? 'children',\\n      );\\n      setPathNames(arr.join(separator));\\n    } else {\\n      setPathNames('');\\n    }\\n  }, [options, selectValue, separator, fieldNames]);\\n  return (\\n    <Text\\n      fieldProps={{\\n        style: fieldProps?.style,\\n        className: fieldProps?.className,\\n      }}\\n      value={pathNames}\\n    />\\n  );\\n};\\nTreeSelectField.displayName = 'TreeSelectField';\\nexport default TreeSelectField;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/src/components/CascaderField.tsx?dumi-raw-code
/* harmony default export */ var CascaderFielddumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-07-19 15:37:05\\n * @Description: \u4E0B\u62C9\u6811 \u7684\u53EA\u8BFB\u6587\u6848\\n * @LastEditors: Please set LastEditors\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useEffect, useState } from 'react';\\nimport { ICascaderFieldProps } from '../typings';\\nimport { deepEach } from '../javascript';\\nimport { DefaultOptionType } from 'antd/lib/select';\\nimport Text from './Text';\\n\\nconst CascaderField = ({ value: selectValue, fieldProps }: ICascaderFieldProps) => {\\n  const [pathNames, setPathNames] = useState('');\\n  const { separator = '/', fieldNames } = fieldProps ?? {};\\n  const options = fieldNames?.children ? fieldProps?.[fieldNames?.children] : fieldProps?.options;\\n  useEffect(() => {\\n    if (options?.length && selectValue) {\\n      const arr: any[] = [];\\n      const { label = 'label', value = 'value' } = fieldNames ?? {};\\n      deepEach(\\n        options,\\n        (item: DefaultOptionType) => {\\n          if (selectValue instanceof Array) {\\n            const row: DefaultOptionType = selectValue.find((val) => val === item[value]);\\n            if (row) {\\n              arr.push(item[label]);\\n            }\\n          } else if (selectValue === item[value]) {\\n            arr.push(item[label]);\\n          }\\n        },\\n        fieldNames?.children ?? 'children',\\n      );\\n      setPathNames(arr.join(separator));\\n    } else {\\n      setPathNames('');\\n    }\\n  }, [options, selectValue, separator, fieldNames]);\\n  return (\\n    <Text\\n      fieldProps={{\\n        style: fieldProps?.style,\\n        className: fieldProps?.className,\\n      }}\\n      value={pathNames}\\n    />\\n  );\\n};\\nCascaderField.displayName = 'CascaderField';\\nexport default CascaderField;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/config.ts?dumi-raw-code
/* harmony default export */ var configdumi_raw_code = ("import moment from 'moment';\\nimport { subtractRangeDays } from '../tests/utils';\\n\\nexport const initValues = {\\n  sel: 'hide',\\n  inp: '\u6D4B\u8BD5input',\\n  search: '\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848\u641C\u7D22\u6846\u6587\u6848',\\n  inputGroup: 'inputGroup\u6587\u672C\u7EC4inputGroup\u6587\u672C\u7EC4inputGroup\u6587\u672C\u7EC4inputGroup\u6587\u672C\u7EC4inputGroup\u6587\u672C\u7EC4',\\n  txt: '\u666E\u901A\u6587\u672C\uFF0C\u53EF\u81EA\u52A8\u7F29\u7565\u3002\u666E\u901A\u6587\u672C\uFF0C\u53EF\u81EA\u52A8\u7F29\u7565\u3002\u666E\u901A\u6587\u672C\uFF0C\u53EF\u81EA\u52A8\u7F29\u7565\u3002',\\n  pwd: '123456',\\n  radioGroup: 'a',\\n  inputNumber: 123,\\n  txtarea:\\n    '\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848\u9ED8\u8BA4\u6587\u672C\u57DF\u6587\u6848',\\n  date: moment(new Date()),\\n  dateRange: subtractRangeDays(7),\\n  time: moment(new Date()),\\n  timeRange: [moment(new Date()), moment(new Date())],\\n  check: true,\\n  boxgroup: ['B'],\\n  rate: 2.5,\\n  slider: 12,\\n  sliderRange: [23, 55],\\n  select: '0-1',\\n  multipleSelect: ['0-0', '0-1'],\\n  customTree: ['menu_frontAccess', 'btn_frontAccess_userManagement_query'],\\n  cascader: ['zhejiang', 'hangzhou', 'xihu'],\\n  treeSelect: '0-0-1',\\n  multipleTreeSelect: ['0-0-1', '0-0-2'],\\n  upload: [\\n    {\\n      uid: '-1',\\n      name: 'image.png',\\n      status: 'done',\\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n    },\\n  ],\\n  image: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\\n  tag: 'default Tag',\\n  progress: 48,\\n  groupinputdefault: 'groupinputdefault',\\n  grouptextareadefault: 'grouptextareadefaultgrouptextareadefault',\\n};\\n\\nexport const CascaderData = [\\n  {\\n    label: '\u6D59\u6C5F',\\n    value: 'zhejiang',\\n    children: [\\n      {\\n        label: '\u676D\u5DDE',\\n        value: 'hangzhou',\\n        children: [\\n          {\\n            label: '\u897F\u6E56',\\n            value: 'xihu',\\n          },\\n        ],\\n      },\\n    ],\\n  },\\n  {\\n    label: '\u6C5F\u82CF',\\n    value: 'jiangsu',\\n    children: [\\n      {\\n        label: '\u5357\u4EAC',\\n        value: 'nanjing',\\n        children: [\\n          {\\n            label: '\u4E2D\u534E\u95E8',\\n            value: 'zhonghuamen',\\n          },\\n        ],\\n      },\\n    ],\\n  },\\n];\\nexport const CascaderDataFieldNames = [\\n  {\\n    title: '\u6D59\u6C5F',\\n    value: 'zhejiang',\\n    options: [\\n      {\\n        title: '\u676D\u5DDE',\\n        value: 'hangzhou',\\n        options: [\\n          {\\n            title: '\u897F\u6E56',\\n            value: 'xihu',\\n          },\\n        ],\\n      },\\n    ],\\n  },\\n  {\\n    title: '\u6C5F\u82CF',\\n    value: 'jiangsu',\\n    options: [\\n      {\\n        title: '\u5357\u4EAC',\\n        value: 'nanjing',\\n        options: [\\n          {\\n            title: '\u4E2D\u534E\u95E8',\\n            value: 'zhonghuamen',\\n          },\\n        ],\\n      },\\n    ],\\n  },\\n];\\nexport const TreeData = [\\n  {\\n    title: 'Node1',\\n    value: '0-0',\\n    children: [\\n      {\\n        title: 'Child Node1',\\n        value: '0-0-1',\\n      },\\n      {\\n        title: 'Child Node2',\\n        value: '0-0-2',\\n      },\\n    ],\\n  },\\n  {\\n    title: 'Node2',\\n    value: '0-1',\\n  },\\n];\\n\\nexport const SelectData = [\\n  {\\n    label: 'Node1',\\n    value: '0-0',\\n  },\\n  {\\n    label: 'Node2',\\n    value: '0-1',\\n  },\\n  {\\n    label: 'Node3',\\n    value: '0-2',\\n  },\\n  {\\n    label: 'Node4',\\n    value: '0-3',\\n  },\\n];");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/tests/utils.ts?dumi-raw-code
/* harmony default export */ var tests_utilsdumi_raw_code = ("import MockDate from 'mockdate';\\nimport moment from 'moment';\\nimport { act } from 'react-dom/test-utils';\\n\\nexport function setMockDate(dateString = '2017-09-18T03:30:07.795') {\\n  MockDate.set(dateString);\\n}\\n\\nexport function resetMockDate() {\\n  MockDate.reset();\\n}\\n\\nexport const waitForComponentToPaint = async (wrapper: any, time = 50) => {\\n  await act(async () => {\\n    wrapper?.update?.();\\n    await new Promise((resolve) => setTimeout(resolve, time));\\n    wrapper?.update?.();\\n  });\\n};\\n\\n/** \u8FD4\u56DE\u6700\u8FD1n\u5929\u7684 \u5F00\u59CB\u3001\u7ED3\u675F\u65F6\u95F4 */\\nexport const subtractRangeDays = (time = 7) => [\\n  moment().startOf('day').subtract(time, 'days'),\\n  moment().endOf('day'),\\n];");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/ElementDemo.tsx?dumi-raw-code
/* harmony default export */ var ElementDemodumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2021-10-09 11:58:48\\n * @Description: \u539F\u5B50\u7EC4\u4EF6 - demo\\n * @LastModifiedBy: yihuang\\n */\\nimport React from 'react';\\nimport { Form, Button, Space, Card, Divider } from 'antd';\\nimport { useRequest } from 'ahooks';\\nimport { getDetails } from './service';\\nimport Element from '../src/index';\\nimport moment from 'moment';\\n\\nconst { Item } = Form;\\n// const str =\\n//   '\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848\u8D85\u7EA7\u957F\u7684\u6587\u6848';\\n\\nconst ElementDemo = () => {\\n  const [modeForm] = Form.useForm();\\n  const [searchForm] = Form.useForm();\\n  const [passwordForm] = Form.useForm();\\n\\n  useRequest(getDetails, {\\n    onSuccess: (data) => {\\n      modeForm.setFieldsValue(data);\\n    },\\n  });\\n\\n  const onSubmit = () => {\\n    modeForm.validateFields().then((values) => {\\n      console.log('form.onSubmit', values);\\n    });\\n  };\\n  const onReset = () => {\\n    modeForm.resetFields();\\n  };\\n  return (\\n    <>\\n      <Card title=\\"form element\\">\\n        <Form\\n          form={modeForm}\\n          initialValues={{\\n            dateCustom: moment('2022-06-14 14:26:54'),\\n            // dateCustom: '2022-06-14 14:26:54',\\n            // rangeCustom: [moment('2022-01-14 02:06:04'), moment('2021-09-08 23:59:59')],\\n            rangeCustom: ['2021-10-11 00:00:00', '2021-09-11 23:59:59'],\\n            timeCustom: '14:26:54',\\n            timeRangeCustom: [moment('14:26:54', 'HH:mm:ss'), moment('14:26:54', 'HH:mm:ss')],\\n          }}\\n          onValuesChange={(values) => {\\n            console.log('element form onValuesChange=>', values);\\n          }}\\n        >\\n          <Item label=\\"text\u6587\u672C\u7C7B\u578B\\" name=\\"text\\">\\n            <Element\\n              type=\\"text\\"\\n              fieldProps={{\\n                style: { width: 200 },\\n              }}\\n            />\\n          </Item>\\n          <Item\\n            label=\\"text-edit\\"\\n            name=\\"textEllipsis\\"\\n            style={{\\n              width: '300px',\\n            }}\\n          >\\n            <Element type=\\"input\\" fieldProps={{ className: 'input-xxx' }} />\\n          </Item>\\n\\n          <Item\\n            label=\\"date-custom\\"\\n            name=\\"dateCustom\\"\\n            rules={[\\n              {\\n                required: true,\\n                message: '\u5FC5\u586B',\\n              },\\n            ]}\\n          >\\n            <Element\\n              type=\\"datePicker\\"\\n              fieldProps={{ convertResult: (val: any) => moment(val).valueOf() }}\\n            />\\n          </Item>\\n          <Item label=\\"rangeCustom\\" name=\\"rangeCustom\\">\\n            <Element type=\\"rangePicker\\" fieldProps={{ convertResult: 'YYYY-MM-DD HH:mm:ss' }} />\\n          </Item>\\n          <Item label=\\"valuePropName\\" name=\\"rangeCustom\\" valuePropName=\\"range\\">\\n            <Element type=\\"rangePicker\\" fieldProps={{ valuePropName: 'range' }} />\\n          </Item>\\n\\n          <Item label=\\"timeCustom\\" name=\\"timeCustom\\">\\n            <Element\\n              type=\\"timePicker\\"\\n              fieldProps={{\\n                convertResult: (val: any) => {\\n                  const xx = moment(val, 'HH:mm:ss');\\n                  console.log('xx', xx);\\n                  return xx;\\n                },\\n              }}\\n            />\\n          </Item>\\n\\n          <Item label=\\"timeRangeCustom\\" name=\\"timeRangeCustom\\">\\n            <Element type=\\"timeRangePicker\\" />\\n          </Item>\\n\\n          <Item label=\\"custom\\" name=\\"custom\\">\\n            <Element\\n              type=\\"custom\\"\\n              render={() => (\\n                <p\\n                  style={{\\n                    color: 'red',\\n                  }}\\n                >\\n                  \u81EA\u5B9A\u4E49\u5185\u5BB9\\n                </p>\\n              )}\\n            />\\n          </Item>\\n\\n          <Item label=\\"\u5206\u5272\u7EBF\\" name=\\"divider\\">\\n            <Element\\n              type=\\"divider\\"\\n              fieldProps={{\\n                dashed: true,\\n              }}\\n            />\\n          </Item>\\n          <Item label=\\"\u63CF\u8FF0\\" name=\\"descriptions\\">\\n            <Element\\n              type=\\"descriptions\\"\\n              fieldProps={{\\n                options: [\\n                  {\\n                    label: '\u63CF\u8FF01',\\n                    code: 'code',\\n                    value: 'value_1',\\n                  },\\n                ],\\n              }}\\n            />\\n          </Item>\\n\\n          <Item\\n            style={{\\n              width: '400px',\\n            }}\\n          >\\n            <Space>\\n              <Button type=\\"primary\\" onClick={onSubmit}>\\n                \u63D0\u4EA4\\n              </Button>\\n              <Button onClick={onReset}>\u91CD\u7F6E</Button>\\n            </Space>\\n          </Item>\\n        </Form>\\n      </Card>\\n      <Divider />\\n      <Card title=\\"search onEnter\\">\\n        <Form\\n          form={searchForm}\\n          onFinish={(values) => console.log('search findish values=>', values)}\\n        >\\n          <Item label=\\"search\\" name=\\"search\\">\\n            <Element type=\\"search\\" />\\n          </Item>\\n        </Form>\\n      </Card>\\n      <Card title=\\"password onEnter\\">\\n        <Form\\n          form={passwordForm}\\n          onFinish={(values) => console.log('password findish values=>', values)}\\n        >\\n          <Item label=\\"password\\" name=\\"password\\">\\n            <Element type=\\"password\\" />\\n          </Item>\\n        </Form>\\n      </Card>\\n    </>\\n  );\\n};\\n\\nexport default ElementDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/service.ts?dumi-raw-code
/* harmony default export */ var servicedumi_raw_code = ("import { post, get } from './http';\\n\\nexport const getDetails = async () => {\\n  return get('/api/getInfo');\\n};\\n\\nexport const saveFunc = async () => {\\n  return post('/api/save');\\n};\\nexport const getTreeData = async () => {\\n  return get('/api/tree');\\n};\\nexport const getSelectData = async () => {\\n  return post('/api/select');\\n};");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/http.ts?dumi-raw-code
/* harmony default export */ var httpdumi_raw_code = ("const request = (url: string, options?: any) => {\\n  return new Promise<any>((resolve) => {\\n    fetch(url, {\\n      credentials: 'include',\\n      mode: 'cors',\\n      ...options,\\n    }).then((response) => {\\n      if (response.status === 200) {\\n        return resolve(response.json());\\n      } else {\\n        throw new Error('Something went wrong on api server!');\\n      }\\n    });\\n  });\\n};\\n\\nexport const get = async (url: any, params?: any) => {\\n  const response = await request(url, {\\n    ...params,\\n    method: 'GET',\\n  });\\n  return response.respData;\\n};\\n\\nexport const post = async (url: any, params?: any) => {\\n  const response = await request(url, {\\n    ...params,\\n    method: 'POST',\\n  });\\n  return response.respData;\\n};");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/FieldDemo.tsx?dumi-raw-code
/* harmony default export */ var FieldDemodumi_raw_code = ("import React from 'react';\\nimport { Form, Card } from 'antd';\\nimport { Field } from '../src/index';\\nimport { EnumDataType } from '../src/typings';\\nimport { initValues, SelectData, TreeData, CascaderDataFieldNames } from './config';\\nimport moment from 'moment';\\n\\nconst { Item } = Form;\\nconst Time_YMD = '2022-01-14 02:06:04';\\nconst Time_YMD_1 = '2022-06-27 13:29:13';\\nconst HMS_1 = '02:06:04';\\nconst HMS_2 = '13:29:13';\\nconst unixValueOf = 1642097164000;\\n\\nconst FieldDemo = () => {\\n  const [form] = Form.useForm();\\n  return (\\n    <Card title=\\"\u53EA\u8BFB\u6587\u672C\\">\\n      <Form form={form} initialValues={initValues}>\\n        <Item label=\\"\u76F4\u63A5\u6E32\u67D3\u7684\u6587\u672C\\" name=\\"txt\\">\\n          <Field\\n            type=\\"text\\"\\n            fieldProps={{\\n              style: {\\n                width: 100,\\n              },\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"custom \u81EA\u5B9A\u4E49\\">\\n          <Field\\n            type=\\"custom\\"\\n            render={() => (\\n              <p\\n                style={{\\n                  color: 'red',\\n                }}\\n              >\\n                \u81EA\u5B9A\u4E49\u5185\u5BB9\\n              </p>\\n            )}\\n          />\\n        </Item>\\n        <Item label=\\"select\u4E0B\u62C9\u8F6C\u6587\u672C\\" name=\\"select\\">\\n          <Field\\n            type=\\"select\\"\\n            fieldProps={{\\n              options: SelectData,\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"select\u4E0B\u62C9\u591A\u9009\u8F6C\u6587\u672C\\" name=\\"multipleSelect\\">\\n          <Field\\n            type=\\"select\\"\\n            fieldProps={{\\n              mode: 'multiple',\\n              separator: ' - ',\\n              options: SelectData,\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"treeSelect \u4E0B\u62C9\u6811\u591A\u9009\u8F6C\u6587\u672C\\" name=\\"multipleTreeSelect\\">\\n          <Field\\n            type=\\"treeSelect\\"\\n            fieldProps={{\\n              separator: ' / ',\\n              treeData: TreeData,\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"cascader\u8F6C\u6587\u672C\\" name=\\"cascader\\">\\n          <Field\\n            type=\\"cascader\\"\\n            fieldProps={{\\n              separator: ' / ',\\n              options: CascaderDataFieldNames,\\n              fieldNames: {\\n                label: 'title',\\n                value: 'value',\\n                children: 'options',\\n              },\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"datePicker default value\\">\\n          <Field type=\\"datePicker\\" value={Time_YMD} />\\n        </Item>\\n        <Item label=\\"datePicker value to unixValueOf\\">\\n          <Field\\n            type=\\"datePicker\\"\\n            value={Time_YMD}\\n            fieldProps={{\\n              convertResult: 'unixValueOf',\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"datePicker moment value\\">\\n          <Field type=\\"datePicker\\" value={moment(Time_YMD)} />\\n        </Item>\\n        <Item label=\\"datePicker unixValueOf value\\">\\n          <Field type=\\"datePicker\\" value={unixValueOf} />\\n        </Item>\\n        <Item label=\\"datePicker value to unix\\">\\n          <Field\\n            type=\\"datePicker\\"\\n            value={Time_YMD}\\n            fieldProps={{\\n              convertResult: 'unix',\\n            }}\\n          />\\n        </Item>\\n\\n        <Item label=\\"timePicker default value\\">\\n          <Field type=\\"timePicker\\" value={HMS_1} />\\n        </Item>\\n        <Item label=\\"timePicker moment value\\">\\n          <Field type=\\"timePicker\\" value={moment(HMS_1, EnumDataType.HMS)} />\\n        </Item>\\n\\n        <Item label=\\"timeRangePicker default value\\">\\n          <Field type=\\"timeRangePicker\\" value={[HMS_1, HMS_2]} />\\n        </Item>\\n        <Item label=\\"timeRangePicker moment value\\">\\n          <Field\\n            type=\\"timeRangePicker\\"\\n            value={[moment(HMS_1, EnumDataType.HMS), moment(HMS_2, EnumDataType.HMS)]}\\n          />\\n        </Item>\\n\\n        <Item label=\\"rangePicker default value\\">\\n          <Field\\n            type=\\"rangePicker\\"\\n            value={[Time_YMD, Time_YMD_1]}\\n            fieldProps={{\\n              separator: ' -- \u81EA\u5B9A\u4E49\u5206\u9694 -- ',\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"rangePicker moment value\\">\\n          <Field type=\\"rangePicker\\" value={[moment(Time_YMD), moment(Time_YMD_1)]} />\\n        </Item>\\n        <Item label=\\"rangePicker value to unixValueOf\\">\\n          <Field\\n            type=\\"rangePicker\\"\\n            value={[moment(Time_YMD), moment(Time_YMD_1)]}\\n            fieldProps={{\\n              convertResult: 'unixValueOf',\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"tag\\">\\n          <Field type=\\"tag\\" value=\\"tag-xxx\\" />\\n        </Item>\\n        <Item label=\\"\u5206\u5272\u7EBF\\" name=\\"divider\\">\\n          <Field\\n            type=\\"divider\\"\\n            fieldProps={{\\n              dashed: true,\\n            }}\\n          />\\n        </Item>\\n        <Item label=\\"\u63CF\u8FF0\\" name=\\"descriptions\\">\\n          <Field\\n            type=\\"descriptions\\"\\n            fieldProps={{\\n              options: [\\n                {\\n                  label: '\u63CF\u8FF01',\\n                  code: 'code',\\n                  value: 'value_1',\\n                },\\n                {\\n                  label: '\u63CF\u8FF02',\\n                  code: 'code2',\\n                  value: 'value_2',\\n                },\\n              ],\\n            }}\\n          />\\n        </Item>\\n      </Form>\\n    </Card>\\n  );\\n};\\nexport default FieldDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/InputWrapDemo.tsx?dumi-raw-code
/* harmony default export */ var InputWrapDemodumi_raw_code = ("import React from 'react';\\nimport { Form, Card } from 'antd';\\nimport { InputWrap } from '../src/index';\\n\\nconst { Item } = Form;\\nconst InputWrapDemo = () => {\\n  const onValuesChange = (values) => {\\n    console.log('onValuesChange', values);\\n  };\\n  return (\\n    <Card title=\\"InputWrap\u7EC4\u4EF6\\">\\n      <Form\\n        initialValues={{\\n          inputWrap: '\u8F93\u5165\u81EA\u52A8\u53BB\u6389\u524D\u540E\u7A7A\u683C\uFF0CEnter\u89E6\u53D1\u63D0\u4EA4',\\n        }}\\n        onValuesChange={onValuesChange}\\n      >\\n        <Item name=\\"inputWrap\\">\\n          <InputWrap />\\n        </Item>\\n      </Form>\\n    </Card>\\n  );\\n};\\nexport default InputWrapDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/SchemaDemoCustom.tsx?dumi-raw-code
/* harmony default export */ var SchemaDemoCustomdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-17 16:47:14\\n * @Description: \u81EA\u5B9A\u4E49\u8868\u5355\u7ED3\u6784\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useState, useCallback } from 'react';\\nimport { Button, Space, Form, Tree, Spin, Tag } from 'antd';\\nimport { SchemaForm } from '../src';\\nimport { useRequest } from 'ahooks';\\n// import { initValues } from './config';\\nimport { getDetails, getTreeData, getSelectData } from './service';\\nimport { SelectData, TreeData } from './config';\\n\\ninterface IValuesProps {\\n  inp: string;\\n  txt: string;\\n  sel: string;\\n  upload: any[];\\n}\\n\\nconst SchemaDemoCustom = () => {\\n  const [form] = Form.useForm();\\n\\n  const { data: initialValues } = useRequest(getDetails);\\n  const getStatusFunc = useCallback(({ sel }: IValuesProps) => {\\n    return {\\n      disabled: sel === 'disabled',\\n      readOnly: sel === 'readOnly',\\n      style: {\\n        display: sel === 'hide' ? 'none' : 'inline-flex',\\n      },\\n    };\\n  }, []);\\n  const [inputState, setInputState] = useState<any>();\\n  const { data } = useRequest(getDetails, {\\n    onSuccess: () => {\\n      setInputState(getStatusFunc(data));\\n    },\\n  });\\n  const { data: treeData = [], loading: treeLoading } = useRequest(getTreeData, {\\n    onSuccess: () => {\\n      setInputState(getStatusFunc(data));\\n      setTimeout(() => {\\n        form.setFieldsValue(data);\\n      }, 1500);\\n    },\\n  });\\n  const { data: roleList = [] } = useRequest(getSelectData);\\n\\n  // form values change\\n  const onValuesChange = (values: IValuesProps) => {\\n    const formData = form.getFieldsValue();\\n    setInputState(getStatusFunc({ ...data, ...formData }));\\n  };\\n  const onFinish = (values: IValuesProps) => {\\n    form.validateFields().then((formData) => {\\n      console.log('schema demo onFinish then formData', formData);\\n    });\\n  };\\n  const onReset = () => {\\n    form.resetFields();\\n    setInputState(getStatusFunc(data));\\n  };\\n\\n  return (\\n    <SchemaForm\\n      type=\\"custom\\"\\n      initialValues={initialValues}\\n      disabled={inputState?.disabled}\\n      readOnly={inputState?.readOnly}\\n      labelAlign=\\"right\\"\\n      form={form}\\n      onFinish={onFinish}\\n      onValuesChange={onValuesChange}\\n      options={[\\n        {\\n          label: '\u8054\u52A8\u8F93\u5165\u6846',\\n          name: 'sel',\\n          type: 'select',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          fieldProps: {\\n            disabled: false,\\n            readOnly: false,\\n            options: [\\n              {\\n                label: '\u663E\u793A\u8F93\u5165',\\n                value: 'show',\\n              },\\n              {\\n                label: '\u9690\u85CF\u8F93\u5165',\\n                value: 'hide',\\n              },\\n              {\\n                label: '\u7981\u7528\u8868\u5355',\\n                value: 'disabled',\\n              },\\n              {\\n                label: '\u53EA\u8BFB\u8868\u5355',\\n                value: 'readOnly',\\n              },\\n            ],\\n          },\\n        },\\n        {\\n          label: '\u6D4B\u8BD5\u8F93\u5165',\\n          name: 'inp',\\n          type: 'input',\\n          fieldProps: {\\n            // \u5141\u8BB8\u7A7A\u683C\\n            isTrim: false,\\n            placeholder: '\u9ED8\u8BA4\u8F93\u5165',\\n            ...inputState,\\n          },\\n        },\\n        {\\n          label: '\u641C\u7D22\u6846',\\n          name: 'search',\\n          type: 'search',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          fieldProps: {\\n            placeholder: '\u9ED8\u8BA4\u6587\u6848',\\n            onSearch: (val) => {\\n              console.log('searc', val);\\n            },\\n          },\\n        },\\n        {\\n          label: '\u4E0B\u62C9\u6846',\\n          name: 'select',\\n          type: 'select',\\n          fieldProps: {\\n            options: SelectData as any,\\n          },\\n        },\\n        {\\n          label: '\u6D4B\u8BD5\u591A\u9009',\\n          name: 'multipleSelect',\\n          type: 'select',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          fieldProps: {\\n            readOnly: false,\\n            mode: 'multiple',\\n            showSearch: true,\\n            allowClear: true,\\n            options: roleList,\\n            fieldNames: {\\n              label: 'roleName',\\n              value: 'roleCode',\\n            },\\n          },\\n        },\\n        {\\n          label: '\u5206\u7EC4',\\n          type: 'group',\\n          className: 'group-wrap',\\n          style: { padding: '12px', marginBottom: '16px', backgroundColor: '#eee' },\\n          options: [\\n            {\\n              type: 'input',\\n              label: '\u5206\u7EC4\u7684input',\\n              name: 'groupinputdefault',\\n              rules: [\\n                {\\n                  message: '\u5FC5\u586B\u53C2\u6570',\\n                  required: true,\\n                },\\n              ],\\n            },\\n            {\\n              type: 'textarea',\\n              label: '\u5206\u7EC4\u7684textarea',\\n              name: 'grouptextareadefault',\\n              rules: [\\n                {\\n                  message: '\u5FC5\u586B\u53C2\u6570',\\n                  required: true,\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          label: '\u4E0B\u62C9\u6811',\\n          name: 'treeSelect',\\n          type: 'treeSelect',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          fieldProps: {\\n            treeData,\\n            treeCheckStrictly: true,\\n            treeCheckable: true,\\n            treeDefaultExpandAll: true,\\n            fieldNames: {\\n              label: 'funcName',\\n              value: 'funcCode',\\n              children: 'childElementList',\\n            },\\n          },\\n        },\\n        {\\n          label: '\u81EA\u5B9A\u4E49\u6811',\\n          name: 'customTree',\\n          type: 'custom',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          render: ({ value, readOnly, disabled, onChange }) => {\\n            return (\\n              <Spin spinning={treeLoading}>\\n                {treeData?.length && !readOnly ? (\\n                  <Tree\\n                    disabled={disabled}\\n                    height={300}\\n                    defaultExpandAll\\n                    checkable\\n                    checkedKeys={value}\\n                    treeData={treeData}\\n                    onCheck={onChange}\\n                    fieldNames={{\\n                      title: 'funcName',\\n                      key: 'funcCode',\\n                      children: 'childElementList',\\n                    }}\\n                  />\\n                ) : readOnly ? (\\n                  <>\\n                    \u53EA\u8BFB\u81EA\u5DF1\u6E32\u67D3value:\\n                    {value?.map((tag) => (\\n                      <Tag key={tag}>{tag}</Tag>\\n                    ))}\\n                  </>\\n                ) : null}\\n              </Spin>\\n            );\\n          },\\n        },\\n        {\\n          // \u72EC\u5360\u4E00\u884C Col span=24\\n          col: 24,\\n          className: 'margin-bottom-none',\\n          style: { marginBottom: 0 },\\n          wrapperCol: {\\n            offset: 1,\\n          },\\n          // \u81EA\u5B9A\u4E49\u5185\u5BB9\\n          type: 'custom',\\n          render: ({ disabled }) => (\\n            <Space>\\n              <Button disabled={disabled} type=\\"primary\\" htmlType=\\"submit\\">\\n                \u63D0\u4EA4\\n              </Button>\\n              <Button disabled={disabled} onClick={onReset}>\\n                \u91CD\u7F6E\\n              </Button>\\n            </Space>\\n          ),\\n        },\\n      ]}\\n    />\\n  );\\n};\\nexport default SchemaDemoCustom;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/SchemaDemoRow.tsx?dumi-raw-code
/* harmony default export */ var SchemaDemoRowdumi_raw_code = ("/*\\n * @Author: yihuang\\n * @Date: 2022-02-07 17:54:41\\n * @Description:  \u9ED8\u8BA4\u8868\u5355\u7ED3\u6784: Row\u5E03\u5C40\\n * @LastModifiedBy: yihuang\\n */\\nimport React, { useState, useCallback } from 'react';\\nimport { UserOutlined, UploadOutlined, SyncOutlined } from '@ant-design/icons';\\nimport { Button, Space, Form } from 'antd';\\nimport { disabledRangeTime } from './utils';\\nimport { SchemaForm, Element } from '../src';\\nimport { CascaderData, initValues, SelectData, TreeData } from './config';\\nimport moment from 'moment';\\n\\ninterface IValuesProps {\\n  inp: string;\\n  txt: string;\\n  sel: string;\\n  upload: any[];\\n}\\n\\nconst SchemaDemo = () => {\\n  const [form] = Form.useForm();\\n  const getStatusFunc = useCallback(({ sel }: IValuesProps) => {\\n    return {\\n      disabled: sel === 'disabled',\\n      readOnly: sel === 'readOnly',\\n      style: {\\n        display: sel === 'hide' ? 'none' : 'inline-flex',\\n      },\\n    };\\n  }, []);\\n  const [inputState, setInputState] = useState(getStatusFunc(initValues));\\n  // form values change\\n  const onValuesChange = (values: IValuesProps) => {\\n    const formData = form.getFieldsValue();\\n    setInputState(getStatusFunc({ ...initValues, ...formData }));\\n  };\\n  const onFinish = (values: IValuesProps) => {\\n    form.validateFields().then((formData) => {\\n      console.log('schema demo onFinish then formData', formData);\\n    });\\n  };\\n  const onReset = () => {\\n    form.resetFields();\\n    setInputState(getStatusFunc(initValues));\\n  };\\n\\n  return (\\n    <SchemaForm\\n      disabled={inputState.disabled}\\n      readOnly={inputState?.readOnly}\\n      type=\\"row\\"\\n      initialValues={initValues}\\n      labelAlign=\\"right\\"\\n      form={form}\\n      labelCol={{ span: 6 }}\\n      wrapperCol={{ span: 18 }}\\n      onFinish={onFinish}\\n      onValuesChange={onValuesChange}\\n      options={[\\n        {\\n          label: '\u8054\u52A8\u8F93\u5165\u6846',\\n          name: 'sel',\\n          type: 'select',\\n          fieldProps: {\\n            disabled: false,\\n            readOnly: false,\\n            options: [\\n              {\\n                label: '\u663E\u793A\u8F93\u5165',\\n                value: 'show',\\n              },\\n              {\\n                label: '\u9690\u85CF\u8F93\u5165',\\n                value: 'hide',\\n              },\\n              {\\n                label: '\u7981\u7528\u8868\u5355',\\n                value: 'disabled',\\n              },\\n              {\\n                label: '\u53EA\u8BFB\u8868\u5355',\\n                value: 'readOnly',\\n              },\\n            ],\\n          },\\n        },\\n        {\\n          label: '\u6D4B\u8BD5\u8F93\u5165',\\n          name: 'inp',\\n          type: 'input',\\n          rules: [\\n            {\\n              message: '\u5FC5\u586B\u53C2\u6570',\\n              required: true,\\n            },\\n          ],\\n          fieldProps: {\\n            // \u5141\u8BB8\u7A7A\u683C\\n            isTrim: false,\\n            placeholder: '\u9ED8\u8BA4\u8F93\u5165',\\n            ...inputState,\\n          },\\n        },\\n        {\\n          label: '\u666E\u901A\u6587\u672C',\\n          name: 'txt',\\n          type: 'text',\\n        },\\n        {\\n          label: 'inputGroup',\\n          name: 'inputGroup',\\n          type: 'inputGroup',\\n          fieldProps: {\\n            compact: true,\\n            children: ({ disabled, value, onChange }) => (\\n              <>\\n                <Element\\n                  type=\\"input\\"\\n                  value={value}\\n                  fieldProps={{\\n                    disabled,\\n                    style: {\\n                      width: '65%',\\n                    },\\n                    onChange,\\n                  }}\\n                />\\n                <Button disabled={disabled} type=\\"primary\\">\\n                  Submit\\n                </Button>\\n              </>\\n            ),\\n          },\\n        },\\n        {\\n          label: '\u6587\u672C\u57DF',\\n          name: 'txtarea',\\n          type: 'textarea',\\n          fieldProps: {\\n            showCount: true,\\n            maxLength: 500,\\n          },\\n        },\\n        {\\n          label: '\u641C\u7D22\u6846',\\n          name: 'search',\\n          type: 'search',\\n          fieldProps: {\\n            placeholder: '\u9ED8\u8BA4\u6587\u6848',\\n            onSearch: (val) => {\\n              console.log('searc', val);\\n            },\\n          },\\n        },\\n        {\\n          label: '\u5BC6\u7801\u6846',\\n          name: 'pwd',\\n          type: 'password',\\n        },\\n        {\\n          label: '\u6570\u5B57\u8F93\u5165\u6846',\\n          name: 'inputNumber',\\n          type: 'inputNumber',\\n          fieldProps: {\\n            prefix: '\uFFE5',\\n            addonBefore: <UserOutlined />,\\n          },\\n        },\\n        {\\n          label: '\u65E5\u671F',\\n          name: 'date',\\n          type: 'datePicker',\\n          fieldProps: {\\n            placeholder: 'xxx date',\\n            showTime: true,\\n          },\\n        },\\n        {\\n          label: '\u65E5\u671F\u533A\u95F4',\\n          name: 'dateRange',\\n          type: 'rangePicker',\\n          col: 12,\\n          labelCol: {\\n            span: 3,\\n          },\\n          wrapperCol: {\\n            span: 21,\\n          },\\n          fieldProps: {\\n            placeholder: ['\u5F00\u59CB', '\u7ED3\u675F'],\\n            showTime: {\\n              hideDisabledOptions: true,\\n              defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('11:59:59', 'HH:mm:ss')],\\n            },\\n            disabledTime: disabledRangeTime,\\n          },\\n        },\\n        {\\n          label: '\u65F6\u95F4',\\n          name: 'time',\\n          type: 'timePicker',\\n          fieldProps: {\\n            placeholder: 'timePicker date',\\n          },\\n        },\\n        {\\n          label: '\u65F6\u95F4\u533A\u95F4',\\n          name: 'timeRange',\\n          type: 'timeRangePicker',\\n          fieldProps: {\\n            placeholder: ['timeRange1', 'timeRange2'],\\n          },\\n        },\\n        {\\n          label: '\u4E0B\u62C9\u6846',\\n          name: 'select',\\n          type: 'select',\\n          fieldProps: {\\n            options: SelectData as any,\\n          },\\n        },\\n        {\\n          label: '\u7EA7\u8054',\\n          name: 'cascader',\\n          type: 'cascader',\\n          fieldProps: {\\n            options: CascaderData,\\n          },\\n        },\\n        {\\n          label: '\u6811\u9009\u62E9',\\n          name: 'treeSelect',\\n          type: 'treeSelect',\\n          fieldProps: {\\n            treeData: TreeData,\\n          },\\n        },\\n        {\\n          label: '\u6811\u591A\u9009',\\n          name: 'multipleTreeSelect',\\n          type: 'treeSelect',\\n          fieldProps: {\\n            multiple: true,\\n            treeData: TreeData,\\n          },\\n        },\\n        {\\n          label: '\u590D\u9009\u6846',\\n          name: 'check',\\n          type: 'checkbox',\\n        },\\n        {\\n          label: '\u590D\u9009\u6846\u7EC4',\\n          name: 'boxgroup',\\n          type: 'checkboxGroup',\\n          fieldProps: {\\n            options: [\\n              {\\n                label: 'A',\\n                value: 'A',\\n              },\\n              {\\n                label: 'B',\\n                value: 'B',\\n              },\\n            ],\\n          },\\n        },\\n        {\\n          label: '\u5355\u9009\u7EC4',\\n          name: 'radioGroup',\\n          type: 'radioGroup',\\n          fieldProps: {\\n            // \u5207\u6362\u4E3A\u6309\u94AE\u7C7B\u578B\\n            // optionType: 'button',\\n            options: [\\n              {\\n                label: 'A',\\n                value: 'a',\\n              },\\n              {\\n                label: 'B',\\n                value: 'b',\\n              },\\n            ],\\n          },\\n        },\\n        {\\n          label: '\u8BC4\u5206',\\n          name: 'rate',\\n          type: 'rate',\\n          fieldProps: {\\n            allowHalf: true,\\n          },\\n        },\\n        {\\n          label: '\u5355\u4E2A\u6ED1\u52A8\u6761',\\n          name: 'slider',\\n          type: 'slider',\\n          fieldProps: {\\n            max: 100,\\n            min: 1,\\n          },\\n        },\\n        {\\n          label: '\u53CC\u6ED1\u52A8\u6761',\\n          name: 'sliderRange',\\n          type: 'slider',\\n          fieldProps: {\\n            range: {\\n              draggableTrack: true,\\n            },\\n          },\\n        },\\n        {\\n          label: '\u5F00\u5173',\\n          name: 'switch',\\n          type: 'switch',\\n          fieldProps: {\\n            loading: true,\\n          },\\n        },\\n        {\\n          label: '\u4E0A\u4F20\u6587\u4EF6',\\n          name: 'upload',\\n          type: 'upload',\\n          fieldProps: {\\n            // children\u5728Upload\u7EC4\u4EF6\u4E2D\u4E3A\u5FC5\u586B\u53C2\u6570\\n            children: ({ disabled }) => (\\n              <Button disabled={disabled} icon={<UploadOutlined />}>\\n                \u70B9\u51FB\u4E0A\u4F20\\n              </Button>\\n            ),\\n          },\\n        },\\n        {\\n          label: '\u5934\u50CF',\\n          name: 'av',\\n          type: 'avatar',\\n          fieldProps: {\\n            icon: <UserOutlined />,\\n          },\\n        },\\n        {\\n          label: '\u56FE\u7247',\\n          name: 'image',\\n          type: 'image',\\n          fieldProps: {\\n            width: 100,\\n          },\\n        },\\n        {\\n          label: '\u9ED8\u8BA4\u6807\u7B7E',\\n          name: 'tag',\\n          type: 'tag',\\n          fieldProps: {\\n            icon: <SyncOutlined spin />,\\n            color: 'cyan',\\n          },\\n        },\\n        {\\n          label: '\u81EA\u5B9A\u4E49\u6807\u7B7E',\\n          name: 'tagCustom',\\n          type: 'tag',\\n          fieldProps: {\\n            color: 'red',\\n            // \u53D7 disabled \u63A7\u5236\\n            closable: true,\\n            // \u5982\u679C\u4F7F\u7528children\u6E32\u67D3\uFF0C\u5C06\u4E0D\u4F7F\u7528\u9ED8\u8BA4\u503C\\n            children: () => (\\n              <>\\n                <UserOutlined /> New Tag\\n              </>\\n            ),\\n          },\\n        },\\n        {\\n          label: '\u8FDB\u5EA6\u6761',\\n          name: 'progress',\\n          type: 'progress',\\n          fieldProps: {\\n            type: 'line',\\n            strokeColor: {\\n              '0%': '#108ee9',\\n              '100%': 'yellow',\\n            },\\n          },\\n        },\\n        {\\n          type: 'divider',\\n          col: 24,\\n          wrapperCol: {\\n            span: 24,\\n          },\\n          fieldProps: {\\n            dashed: false,\\n          },\\n        },\\n        {\\n          type: 'descriptions',\\n          col: 24,\\n          wrapperCol: {\\n            span: 24,\\n          },\\n          fieldProps: {\\n            options: [\\n              {\\n                label: '\u63CF\u8FF01',\\n                code: 'code',\\n                value: 'value_1',\\n              },\\n            ],\\n          },\\n        },\\n        {\\n          label: '\u5206\u7EC4',\\n          type: 'group',\\n          className: 'group-wrap',\\n          col: 24,\\n          style: { padding: '12px', marginBottom: '16px', backgroundColor: '#eee' },\\n          options: [\\n            {\\n              type: 'input',\\n              label: '\u5206\u7EC4\u7684input',\\n              name: 'groupinputdefault',\\n              rules: [{ required: true, message: '\u5FC5\u586B' }],\\n              fieldProps: {\\n                maxLength: 500,\\n              },\\n            },\\n            {\\n              type: 'textarea',\\n              label: '\u5206\u7EC4\u7684textarea',\\n              name: 'grouptextareadefault',\\n            },\\n          ],\\n        },\\n        {\\n          // \u72EC\u5360\u4E00\u884C Col span=24\\n          col: 24,\\n          className: 'margin-bottom-none',\\n          style: { marginBottom: 0 },\\n          wrapperCol: {\\n            offset: 1,\\n          },\\n          // \u81EA\u5B9A\u4E49\u5185\u5BB9\\n          type: 'custom',\\n          render: () => (\\n            <Space>\\n              <Button type=\\"primary\\" htmlType=\\"submit\\">\\n                \u63D0\u4EA4\\n              </Button>\\n              <Button onClick={onReset}>\u91CD\u7F6E</Button>\\n            </Space>\\n          ),\\n        },\\n      ]}\\n    />\\n  );\\n};\\nexport default SchemaDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/utils.ts?dumi-raw-code
/* harmony default export */ var example_utilsdumi_raw_code = ("import moment from 'moment';\\n\\nexport const range = (start, end) => {\\n  const result = [];\\n  for (let i = start; i < end; i += 1) {\\n    result.push(i);\\n  }\\n  return result;\\n};\\nexport const disabledRangeTime = (_, type) => {\\n  if (type === 'start') {\\n    return {\\n      disabledHours: () => range(0, 60).splice(4, 20),\\n      disabledMinutes: () => range(30, 60),\\n      disabledSeconds: () => [55, 56],\\n    };\\n  }\\n  return {\\n    disabledHours: () => range(0, 60).splice(20, 4),\\n    disabledMinutes: () => range(0, 31),\\n    disabledSeconds: () => [55, 56],\\n  };\\n};\\nexport const disabledDate = (current) => {\\n  // Can not select days before today and today\\n  return current && current < moment().endOf('day');\\n};");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/SelectFieldDemo.tsx?dumi-raw-code
/* harmony default export */ var SelectFieldDemodumi_raw_code = ("import React from 'react';\\nimport { SelectField } from '../src';\\nimport { SelectData, initValues } from './config';\\n\\nconst SelectFieldDemo = () => {\\n  return (\\n    <SelectField\\n      value={initValues.select}\\n      fieldProps={{\\n        options: SelectData,\\n      }}\\n    />\\n  );\\n};\\nexport default SelectFieldDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/TimeConvertDemo.tsx?dumi-raw-code
/* harmony default export */ var TimeConvertDemodumi_raw_code = ("import React, { useState } from 'react';\\nimport { Form, Card, Button } from 'antd';\\nimport { TimeConvertWrap } from '../src/index';\\nimport moment from 'moment';\\n\\nconst { Item } = Form;\\nconst TimeConvertDemo = () => {\\n  const [values, setValues] = useState({});\\n  const [form] = Form.useForm();\\n\\n  const onFinish = (values: any) => {\\n    form.validateFields().then((formData) => {\\n      setValues(formData);\\n      console.log('TimeConvertDemo demo onFinish then formData', formData);\\n    });\\n  };\\n  const onResetFun = () => {\\n    form.resetFields();\\n    setValues(form.getFieldsValue());\\n  };\\n  return (\\n    <Card title=\\"\u65E5\u671F\u8F6C\u6362\u7EC4\u4EF6\\">\\n      <Form\\n        form={form}\\n        initialValues={{\\n          datePicker: '2022-01-14 02:06:04',\\n          timePicker: '02:06:04',\\n          timeRangePicker: ['02:06:04', '13:29:13'],\\n          rangePicker: ['2022-01-14 02:06:04', '2022-06-27 13:29:13'],\\n          rangePickerShowTime: ['2022-01-14 02:06:04', '2022-06-27 13:29:13'],\\n        }}\\n        onFinish={onFinish}\\n      >\\n        <Item name=\\"timeRangePicker\\">\\n          <TimeConvertWrap type=\\"timeRangePicker\\" />\\n        </Item>\\n        <Item name=\\"rangePickerShowTime\\">\\n          <TimeConvertWrap\\n            type=\\"rangePicker\\"\\n            fieldProps={{ showTime: true, convertResult: 'unix' }}\\n          />\\n        </Item>\\n\\n        <Item name=\\"rangePicker\\">\\n          <TimeConvertWrap\\n            type=\\"rangePicker\\"\\n            fieldProps={{ convertResult: 'YYYY-MM-DD HH:mm:ss', showTime: true }}\\n          />\\n        </Item>\\n\\n        <Item name=\\"datePicker\\">\\n          <TimeConvertWrap type=\\"datePicker\\" />\\n        </Item>\\n        <Item name=\\"timePicker\\">\\n          <TimeConvertWrap type=\\"timePicker\\" />\\n        </Item>\\n\\n        <Item>\\n          <Button type=\\"primary\\" htmlType=\\"submit\\">\\n            \u63D0\u4EA4\\n          </Button>\\n          <Button onClick={onResetFun}>\u91CD\u7F6E</Button>\\n        </Item>\\n      </Form>\\n      <div>{JSON.stringify(values, null, 2)}</div>\\n    </Card>\\n  );\\n};\\nexport default TimeConvertDemo;");
;// CONCATENATED MODULE: ./node_modules/@umijs/preset-dumi/lib/loader/rawCode.js!./packages/element/example/TreeSelectFieldDemo.tsx?dumi-raw-code
/* harmony default export */ var TreeSelectFieldDemodumi_raw_code = ("import React from 'react';\\nimport { TreeSelectField } from '../src';\\nimport { TreeData, initValues } from './config';\\n\\nconst TreeSelectFieldDemo = () => {\\n  return (\\n    <TreeSelectField\\n      value={initValues.multipleTreeSelect}\\n      fieldProps={{\\n        separator: ' - ',\\n        treeData: TreeData,\\n      }}\\n    />\\n  );\\n};\\nexport default TreeSelectFieldDemo;");
;// CONCATENATED MODULE: ./.umi-production/dumi/demos/index.ts


// @ts-nocheck







































/* harmony default export */ var demos = ({
  'element-cascaderfielddemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee() {
          return regenerator_default().wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 93684));

                case 2:
                  return _context.abrupt("return", _context.sent.default);

                case 3:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function loader() {
          return _loader.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": CascaderFieldDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "moment": {
          "version": "2.29.4"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "defaultShowCode": true,
      "identifier": "element-cascaderfielddemo"
    }
  },
  'element-elementdemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader2 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee2() {
          return regenerator_default().wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 97832));

                case 2:
                  return _context2.abrupt("return", _context2.sent.default);

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function loader() {
          return _loader2.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": ElementDemodumi_raw_code
        },
        "service.ts": {
          "import": "./service",
          "content": servicedumi_raw_code
        },
        "http.ts": {
          "import": "./http",
          "content": httpdumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "ahooks": {
          "version": "3.7.0"
        },
        "moment": {
          "version": "2.29.4"
        },
        "react-dom": {
          "version": ">=16.9.0"
        }
      },
      "identifier": "element-elementdemo"
    }
  },
  'element-fielddemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader3 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee3() {
          return regenerator_default().wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 54186));

                case 2:
                  return _context3.abrupt("return", _context3.sent.default);

                case 3:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function loader() {
          return _loader3.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": FieldDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "moment": {
          "version": "2.29.4"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "identifier": "element-fielddemo"
    }
  },
  'element-inputwrapdemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader4 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee4() {
          return regenerator_default().wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  _context4.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 57622));

                case 2:
                  return _context4.abrupt("return", _context4.sent.default);

                case 3:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }));

        function loader() {
          return _loader4.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": InputWrapDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "react-dom": {
          "version": ">=16.9.0"
        },
        "moment": {
          "version": "2.29.4"
        }
      },
      "defaultShowCode": true,
      "identifier": "element-inputwrapdemo"
    }
  },
  'element-schemademocustom': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader5 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee5() {
          return regenerator_default().wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 26337));

                case 2:
                  return _context5.abrupt("return", _context5.sent.default);

                case 3:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }));

        function loader() {
          return _loader5.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": SchemaDemoCustomdumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "service.ts": {
          "import": "./service",
          "content": servicedumi_raw_code
        },
        "http.ts": {
          "import": "./http",
          "content": httpdumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "ahooks": {
          "version": "3.7.0"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "moment": {
          "version": "2.29.4"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "identifier": "element-schemademocustom"
    }
  },
  'element-schemademorow': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader6 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee6() {
          return regenerator_default().wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  _context6.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 45523));

                case 2:
                  return _context6.abrupt("return", _context6.sent.default);

                case 3:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }));

        function loader() {
          return _loader6.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": SchemaDemoRowdumi_raw_code
        },
        "utils.ts": {
          "import": "./utils",
          "content": example_utilsdumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "@ant-design/icons": {
          "version": "4.7.0"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "moment": {
          "version": "2.29.4"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "identifier": "element-schemademorow"
    }
  },
  'element-selectfielddemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader7 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee7() {
          return regenerator_default().wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _context7.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 92332));

                case 2:
                  return _context7.abrupt("return", _context7.sent.default);

                case 3:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7);
        }));

        function loader() {
          return _loader7.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": SelectFieldDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "moment": {
          "version": "2.29.4"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "defaultShowCode": true,
      "identifier": "element-selectfielddemo"
    }
  },
  'element-timeconvertdemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader8 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee8() {
          return regenerator_default().wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  _context8.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 81282));

                case 2:
                  return _context8.abrupt("return", _context8.sent.default);

                case 3:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8);
        }));

        function loader() {
          return _loader8.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": TimeConvertDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "react-dom": {
          "version": ">=16.9.0"
        },
        "moment": {
          "version": "2.29.4"
        }
      },
      "defaultShowCode": true,
      "identifier": "element-timeconvertdemo"
    }
  },
  'element-treeselectfielddemo': {
    component: (0,index_esm.dynamic)({
      loader: function () {
        var _loader9 = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee9() {
          return regenerator_default().wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  _context9.next = 2;
                  return Promise.all(/* import() | demos_no_comp */[__webpack_require__.e(414), __webpack_require__.e(50)]).then(__webpack_require__.bind(__webpack_require__, 1208));

                case 2:
                  return _context9.abrupt("return", _context9.sent.default);

                case 3:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }));

        function loader() {
          return _loader9.apply(this, arguments);
        }

        return loader;
      }(),
      loading: () => null
    }),
    previewerProps: {
      "sources": {
        "_": {
          "tsx": TreeSelectFieldDemodumi_raw_code
        },
        "src/index.tsx": {
          "import": "../src",
          "content": srcdumi_raw_code
        },
        "src/components/Element.tsx": {
          "import": "./components/Element",
          "content": Elementdumi_raw_code
        },
        "src/components/SchemaForm/utils.ts": {
          "import": "./SchemaForm/utils",
          "content": utilsdumi_raw_code
        },
        "src/components/TimeConvertWrap.tsx": {
          "import": "./TimeConvertWrap",
          "content": TimeConvertWrapdumi_raw_code
        },
        "src/typings.ts": {
          "import": "../typings",
          "content": typingsdumi_raw_code
        },
        "src/utils.ts": {
          "import": "../utils",
          "content": src_utilsdumi_raw_code
        },
        "src/hooks/usePrevious/index.tsx": {
          "import": "../hooks/usePrevious",
          "content": usePreviousdumi_raw_code
        },
        "src/components/InputWrap.tsx": {
          "import": "./InputWrap",
          "content": InputWrapdumi_raw_code
        },
        "src/components/Text.tsx": {
          "import": "./Text",
          "content": Textdumi_raw_code
        },
        "src/components/DescriptionWrap/index.tsx": {
          "import": "./DescriptionWrap",
          "content": DescriptionWrapdumi_raw_code
        },
        "src/components/SchemaForm/index.tsx": {
          "import": "./components/SchemaForm",
          "content": SchemaFormdumi_raw_code
        },
        "src/components/SchemaForm/RowLayout.tsx": {
          "import": "./RowLayout",
          "content": RowLayoutdumi_raw_code
        },
        "src/components/SchemaForm/ItemGroupWrap.tsx": {
          "import": "./ItemGroupWrap",
          "content": ItemGroupWrapdumi_raw_code
        },
        "src/components/SchemaForm/ItemWrap.tsx": {
          "import": "./ItemWrap",
          "content": ItemWrapdumi_raw_code
        },
        "src/components/SchemaForm/RenderWrap.tsx": {
          "import": "./RenderWrap",
          "content": RenderWrapdumi_raw_code
        },
        "src/javascript/omit.ts": {
          "import": "../../javascript/omit",
          "content": omitdumi_raw_code
        },
        "src/components/SchemaForm/CustomLayout.tsx": {
          "import": "./CustomLayout",
          "content": CustomLayoutdumi_raw_code
        },
        "src/components/Field.tsx": {
          "import": "./components/Field",
          "content": Fielddumi_raw_code
        },
        "src/components/DateField.tsx": {
          "import": "./DateField",
          "content": DateFielddumi_raw_code
        },
        "src/components/SelectField.tsx": {
          "import": "./SelectField",
          "content": SelectFielddumi_raw_code
        },
        "src/javascript/index.ts": {
          "import": "../javascript",
          "content": javascriptdumi_raw_code
        },
        "src/javascript/deepEach.ts": {
          "import": "./deepEach",
          "content": deepEachdumi_raw_code
        },
        "src/components/TreeSelectField.tsx": {
          "import": "./TreeSelectField",
          "content": TreeSelectFielddumi_raw_code
        },
        "src/components/CascaderField.tsx": {
          "import": "./CascaderField",
          "content": CascaderFielddumi_raw_code
        },
        "config.ts": {
          "import": "./config",
          "content": configdumi_raw_code
        },
        "tests/utils.ts": {
          "import": "../tests/utils",
          "content": tests_utilsdumi_raw_code
        }
      },
      "dependencies": {
        "react": {
          "version": "17.0.2"
        },
        "antd": {
          "version": "4.22.3",
          "css": "antd/dist/antd.css"
        },
        "react-dom": {
          "version": "17.0.2"
        },
        "moment": {
          "version": "2.29.4"
        },
        "mockdate": {
          "version": "3.0.5"
        }
      },
      "defaultShowCode": true,
      "identifier": "element-treeselectfielddemo"
    }
  }
});
;// CONCATENATED MODULE: ./.umi-production/dumi/apis.json
var apis_namespaceObject = JSON.parse('{"SchemaForm":{"default":[{"identifier":"disabled","description":"\u662F\u5426\u7981\u7528\uFF0C\u5982\u679Citem\u6709\uFF0C\u4EE5item\u7684\u4E3A\u7ED3\u679C","type":"boolean"},{"identifier":"readOnly","description":"\u662F\u5426\u53EA\u80FD\u9884\u89C8\uFF0C\u5982\u679Citem\u6709\uFF0C\u4EE5item\u7684\u4E3A\u7ED3\u679C","type":"boolean"},{"identifier":"type","type":"\\\\"row\\\\" | \\\\"custom\\\\"","default":"row"},{"identifier":"options","description":"\u6E32\u67D3\u5217\u8868","type":"IFormItem[]","required":true},{"identifier":"form","description":"Form.useForm()","type":"FormInstance<any>"},{"identifier":"initialValues","type":"Record<string, any> & Store"},{"identifier":"gutter","description":"\u95F4\u8DDD \u9ED8\u8BA4:16","type":"number"},{"identifier":"span","description":"\u95F4\u8DDD \u9ED8\u8BA4:6","type":"number"},{"identifier":"prefixCls","type":"string"},{"identifier":"colon","type":"boolean"},{"identifier":"name","type":"string"},{"identifier":"layout","type":"FormLayout"},{"identifier":"labelAlign","type":"FormLabelAlign"},{"identifier":"labelWrap","type":"boolean"},{"identifier":"labelCol","type":"ColProps"},{"identifier":"wrapperCol","type":"ColProps"},{"identifier":"size","type":"SizeType"},{"identifier":"scrollToFirstError","type":"boolean | Options<any>"},{"identifier":"requiredMark","type":"RequiredMark"},{"identifier":"hideRequiredMark","description":"@deprecated Will warning in future branch. Pls use \`requiredMark\` instead.","type":"boolean"},{"identifier":"acceptCharset","type":"string"},{"identifier":"action","type":"string"},{"identifier":"autoComplete","type":"string"},{"identifier":"encType","type":"string"},{"identifier":"method","type":"string"},{"identifier":"noValidate","type":"boolean"},{"identifier":"target","type":"string"},{"identifier":"defaultChecked","type":"boolean"},{"identifier":"defaultValue","type":"string | number | readonly string[]"},{"identifier":"suppressContentEditableWarning","type":"boolean"},{"identifier":"suppressHydrationWarning","type":"boolean"},{"identifier":"accessKey","type":"string"},{"identifier":"className","type":"string"},{"identifier":"contentEditable","type":"Booleanish | \\\\"inherit\\\\""},{"identifier":"contextMenu","type":"string"},{"identifier":"dir","type":"string"},{"identifier":"draggable","type":"Booleanish"},{"identifier":"hidden","type":"boolean"},{"identifier":"id","type":"string"},{"identifier":"lang","type":"string"},{"identifier":"placeholder","type":"string"},{"identifier":"slot","type":"string"},{"identifier":"spellCheck","type":"Booleanish"},{"identifier":"style","type":"CSSProperties"},{"identifier":"tabIndex","type":"number"},{"identifier":"title","type":"string"},{"identifier":"translate","type":"\\\\"yes\\\\" | \\\\"no\\\\""},{"identifier":"radioGroup","type":"string"},{"identifier":"role","type":"AriaRole"},{"identifier":"about","type":"string"},{"identifier":"datatype","type":"string"},{"identifier":"inlist","type":"any"},{"identifier":"prefix","type":"string"},{"identifier":"property","type":"string"},{"identifier":"resource","type":"string"},{"identifier":"typeof","type":"string"},{"identifier":"vocab","type":"string"},{"identifier":"autoCapitalize","type":"string"},{"identifier":"autoCorrect","type":"string"},{"identifier":"autoSave","type":"string"},{"identifier":"color","type":"string"},{"identifier":"itemProp","type":"string"},{"identifier":"itemScope","type":"boolean"},{"identifier":"itemType","type":"string"},{"identifier":"itemID","type":"string"},{"identifier":"itemRef","type":"string"},{"identifier":"results","type":"number"},{"identifier":"security","type":"string"},{"identifier":"unselectable","type":"\\\\"on\\\\" | \\\\"off\\\\""},{"identifier":"inputMode","description":"Hints at the type of data that might be entered by the user while editing the element or its contents\\\\n@see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute","type":"\\\\"text\\\\" | \\\\"search\\\\" | \\\\"none\\\\" | \\\\"tel\\\\" | \\\\"url\\\\" | \\\\"email\\\\" | \\\\"numeric\\\\" | \\\\"decimal\\\\""},{"identifier":"is","description":"Specify that a standard HTML element should behave like a defined custom built-in element\\\\n@see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is","type":"string"},{"identifier":"aria-activedescendant","description":"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.","type":"string"},{"identifier":"aria-atomic","description":"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.","type":"Booleanish"},{"identifier":"aria-autocomplete","description":"Indicates whether inputting text could trigger display of one or more predictions of the user\\'s intended value for an input and specifies how predictions would be\\\\npresented if they are made.","type":"\\\\"inline\\\\" | \\\\"list\\\\" | \\\\"none\\\\" | \\\\"both\\\\""},{"identifier":"aria-busy","description":"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.","type":"Booleanish"},{"identifier":"aria-checked","description":"Indicates the current \\\\"checked\\\\" state of checkboxes, radio buttons, and other widgets.\\\\n@see aria-pressed\\\\n@see aria-selected.","type":"boolean | \\\\"true\\\\" | \\\\"false\\\\" | \\\\"mixed\\\\""},{"identifier":"aria-colcount","description":"Defines the total number of columns in a table, grid, or treegrid.\\\\n@see aria-colindex.","type":"number"},{"identifier":"aria-colindex","description":"Defines an element\\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\\\\n@see aria-colcount\\\\n@see aria-colspan.","type":"number"},{"identifier":"aria-colspan","description":"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\\\\n@see aria-colindex\\\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-controls","description":"Identifies the element (or elements) whose contents or presence are controlled by the current element.\\\\n@see aria-owns.","type":"string"},{"identifier":"aria-current","description":"Indicates the element that represents the current item within a container or set of related elements.","type":"boolean | \\\\"time\\\\" | \\\\"date\\\\" | \\\\"true\\\\" | \\\\"false\\\\" | \\\\"page\\\\" | \\\\"step\\\\" | \\\\"location\\\\""},{"identifier":"aria-describedby","description":"Identifies the element (or elements) that describes the object.\\\\n@see aria-labelledby","type":"string"},{"identifier":"aria-details","description":"Identifies the element that provides a detailed, extended description for the object.\\\\n@see aria-describedby.","type":"string"},{"identifier":"aria-disabled","description":"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\\\\n@see aria-hidden\\\\n@see aria-readonly.","type":"Booleanish"},{"identifier":"aria-dropeffect","description":"Indicates what functions can be performed when a dragged object is released on the drop target.\\\\n@deprecated in ARIA 1.1","type":"\\\\"link\\\\" | \\\\"none\\\\" | \\\\"copy\\\\" | \\\\"execute\\\\" | \\\\"move\\\\" | \\\\"popup\\\\""},{"identifier":"aria-errormessage","description":"Identifies the element that provides an error message for the object.\\\\n@see aria-invalid\\\\n@see aria-describedby.","type":"string"},{"identifier":"aria-expanded","description":"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.","type":"Booleanish"},{"identifier":"aria-flowto","description":"Identifies the next element (or elements) in an alternate reading order of content which, at the user\\'s discretion,\\\\nallows assistive technology to override the general default of reading in document source order.","type":"string"},{"identifier":"aria-grabbed","description":"Indicates an element\\'s \\\\"grabbed\\\\" state in a drag-and-drop operation.\\\\n@deprecated in ARIA 1.1","type":"Booleanish"},{"identifier":"aria-haspopup","description":"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.","type":"boolean | \\\\"true\\\\" | \\\\"false\\\\" | \\\\"dialog\\\\" | \\\\"grid\\\\" | \\\\"listbox\\\\" | \\\\"menu\\\\" | \\\\"tree\\\\""},{"identifier":"aria-hidden","description":"Indicates whether the element is exposed to an accessibility API.\\\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-invalid","description":"Indicates the entered value does not conform to the format expected by the application.\\\\n@see aria-errormessage.","type":"boolean | \\\\"true\\\\" | \\\\"false\\\\" | \\\\"grammar\\\\" | \\\\"spelling\\\\""},{"identifier":"aria-keyshortcuts","description":"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","type":"string"},{"identifier":"aria-label","description":"Defines a string value that labels the current element.\\\\n@see aria-labelledby.","type":"string"},{"identifier":"aria-labelledby","description":"Identifies the element (or elements) that labels the current element.\\\\n@see aria-describedby.","type":"string"},{"identifier":"aria-level","description":"Defines the hierarchical level of an element within a structure.","type":"number"},{"identifier":"aria-live","description":"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","type":"\\\\"off\\\\" | \\\\"assertive\\\\" | \\\\"polite\\\\""},{"identifier":"aria-modal","description":"Indicates whether an element is modal when displayed.","type":"Booleanish"},{"identifier":"aria-multiline","description":"Indicates whether a text box accepts multiple lines of input or only a single line.","type":"Booleanish"},{"identifier":"aria-multiselectable","description":"Indicates that the user may select more than one item from the current selectable descendants.","type":"Booleanish"},{"identifier":"aria-orientation","description":"Indicates whether the element\\'s orientation is horizontal, vertical, or unknown/ambiguous.","type":"\\\\"horizontal\\\\" | \\\\"vertical\\\\""},{"identifier":"aria-owns","description":"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\\\\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\\\\n@see aria-controls.","type":"string"},{"identifier":"aria-placeholder","description":"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\\\\nA hint could be a sample value or a brief description of the expected format.","type":"string"},{"identifier":"aria-posinset","description":"Defines an element\\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\\\n@see aria-setsize.","type":"number"},{"identifier":"aria-pressed","description":"Indicates the current \\\\"pressed\\\\" state of toggle buttons.\\\\n@see aria-checked\\\\n@see aria-selected.","type":"boolean | \\\\"true\\\\" | \\\\"false\\\\" | \\\\"mixed\\\\""},{"identifier":"aria-readonly","description":"Indicates that the element is not editable, but is otherwise operable.\\\\n@see aria-disabled.","type":"Booleanish"},{"identifier":"aria-relevant","description":"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\\\\n@see aria-atomic.","type":"\\\\"text\\\\" | \\\\"additions\\\\" | \\\\"additions removals\\\\" | \\\\"additions text\\\\" | \\\\"all\\\\" | \\\\"removals\\\\" | \\\\"removals additions\\\\" | \\\\"removals text\\\\" | \\\\"text additions\\\\" | \\\\"text removals\\\\""},{"identifier":"aria-required","description":"Indicates that user input is required on the element before a form may be submitted.","type":"Booleanish"},{"identifier":"aria-roledescription","description":"Defines a human-readable, author-localized description for the role of an element.","type":"string"},{"identifier":"aria-rowcount","description":"Defines the total number of rows in a table, grid, or treegrid.\\\\n@see aria-rowindex.","type":"number"},{"identifier":"aria-rowindex","description":"Defines an element\\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\\\\n@see aria-rowcount\\\\n@see aria-rowspan.","type":"number"},{"identifier":"aria-rowspan","description":"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\\\\n@see aria-rowindex\\\\n@see aria-colspan.","type":"number"},{"identifier":"aria-selected","description":"Indicates the current \\\\"selected\\\\" state of various widgets.\\\\n@see aria-checked\\\\n@see aria-pressed.","type":"Booleanish"},{"identifier":"aria-setsize","description":"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\\\\n@see aria-posinset.","type":"number"},{"identifier":"aria-sort","description":"Indicates if items in a table or grid are sorted in ascending or descending order.","type":"\\\\"none\\\\" | \\\\"ascending\\\\" | \\\\"descending\\\\" | \\\\"other\\\\""},{"identifier":"aria-valuemax","description":"Defines the maximum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuemin","description":"Defines the minimum allowed value for a range widget.","type":"number"},{"identifier":"aria-valuenow","description":"Defines the current value for a range widget.\\\\n@see aria-valuetext.","type":"number"},{"identifier":"aria-valuetext","description":"Defines the human readable text alternative of aria-valuenow for a range widget.","type":"string"},{"identifier":"dangerouslySetInnerHTML","type":"{ __html: string; }"},{"identifier":"onCopy","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onCopyCapture","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onCut","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onCutCapture","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onPaste","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onPasteCapture","type":"ClipboardEventHandler<HTMLFormElement>"},{"identifier":"onCompositionEnd","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onCompositionEndCapture","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onCompositionStart","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onCompositionStartCapture","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onCompositionUpdate","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onCompositionUpdateCapture","type":"CompositionEventHandler<HTMLFormElement>"},{"identifier":"onFocus","type":"FocusEventHandler<HTMLFormElement>"},{"identifier":"onFocusCapture","type":"FocusEventHandler<HTMLFormElement>"},{"identifier":"onBlur","type":"FocusEventHandler<HTMLFormElement>"},{"identifier":"onBlurCapture","type":"FocusEventHandler<HTMLFormElement>"},{"identifier":"onChange","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onChangeCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onBeforeInput","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onBeforeInputCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onInput","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onInputCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onReset","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onResetCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onSubmitCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onInvalid","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onInvalidCapture","type":"FormEventHandler<HTMLFormElement>"},{"identifier":"onLoad","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onError","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onErrorCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onKeyDown","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onKeyDownCapture","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onKeyPress","description":"@deprecated","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onKeyPressCapture","description":"@deprecated","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onKeyUp","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onKeyUpCapture","type":"KeyboardEventHandler<HTMLFormElement>"},{"identifier":"onAbort","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onAbortCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onCanPlay","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onCanPlayCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onCanPlayThrough","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onCanPlayThroughCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onDurationChange","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onDurationChangeCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEmptied","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEmptiedCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEncrypted","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEncryptedCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEnded","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onEndedCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadedData","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadedDataCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadedMetadata","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadedMetadataCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadStart","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onLoadStartCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPause","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPauseCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPlay","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPlayCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPlaying","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onPlayingCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onProgress","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onProgressCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onRateChange","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onRateChangeCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSeeked","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSeekedCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSeeking","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSeekingCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onStalled","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onStalledCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSuspend","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSuspendCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onTimeUpdate","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onTimeUpdateCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onVolumeChange","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onVolumeChangeCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onWaiting","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onWaitingCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onAuxClick","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onAuxClickCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onClick","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onClickCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onContextMenu","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onContextMenuCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onDoubleClick","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onDoubleClickCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onDrag","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragEnd","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragEndCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragEnter","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragEnterCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragExit","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragExitCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragLeave","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragLeaveCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragOver","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragOverCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragStart","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDragStartCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDrop","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onDropCapture","type":"DragEventHandler<HTMLFormElement>"},{"identifier":"onMouseDown","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseDownCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseEnter","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseLeave","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseMove","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseMoveCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseOut","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseOutCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseOver","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseOverCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseUp","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onMouseUpCapture","type":"MouseEventHandler<HTMLFormElement>"},{"identifier":"onSelect","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onSelectCapture","type":"ReactEventHandler<HTMLFormElement>"},{"identifier":"onTouchCancel","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchCancelCapture","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchEnd","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchEndCapture","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchMove","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchMoveCapture","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchStart","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onTouchStartCapture","type":"TouchEventHandler<HTMLFormElement>"},{"identifier":"onPointerDown","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerDownCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerMove","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerMoveCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerUp","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerUpCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerCancel","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerCancelCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerEnter","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerEnterCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerLeave","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerLeaveCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerOver","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerOverCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerOut","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onPointerOutCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onGotPointerCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onGotPointerCaptureCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onLostPointerCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onLostPointerCaptureCapture","type":"PointerEventHandler<HTMLFormElement>"},{"identifier":"onScroll","type":"UIEventHandler<HTMLFormElement>"},{"identifier":"onScrollCapture","type":"UIEventHandler<HTMLFormElement>"},{"identifier":"onWheel","type":"WheelEventHandler<HTMLFormElement>"},{"identifier":"onWheelCapture","type":"WheelEventHandler<HTMLFormElement>"},{"identifier":"onAnimationStart","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onAnimationStartCapture","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onAnimationEnd","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onAnimationEndCapture","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onAnimationIteration","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onAnimationIterationCapture","type":"AnimationEventHandler<HTMLFormElement>"},{"identifier":"onTransitionEnd","type":"TransitionEventHandler<HTMLFormElement>"},{"identifier":"onTransitionEndCapture","type":"TransitionEventHandler<HTMLFormElement>"},{"identifier":"component","type":"string | false | FC<any> | ComponentClass<any, any>"},{"identifier":"fields","type":"FieldData[]"},{"identifier":"validateMessages","type":"ValidateMessages"},{"identifier":"onValuesChange","type":"(changedValues: any, values: any) => void"},{"identifier":"onFieldsChange","type":"(changedFields: FieldData[], allFields: FieldData[]) => void"},{"identifier":"onFinish","type":"(values: any) => void"},{"identifier":"onFinishFailed","type":"(errorInfo: ValidateErrorEntity<any>) => void"},{"identifier":"validateTrigger","type":"string | false | string[]"},{"identifier":"preserve","type":"boolean"}]}}');
// EXTERNAL MODULE: ./node_modules/@umijs/preset-dumi/lib/theme/layout.js
var layout = __webpack_require__(18098);
;// CONCATENATED MODULE: ./.umi-production/dumi/layout.tsx

// @ts-nocheck





/* harmony default export */ var dumi_layout = (props => /*#__PURE__*/react.createElement(layout/* default */.Z, (0,esm_extends/* default */.Z)({}, props, {
  config: config_namespaceObject,
  demos: demos,
  apis: apis_namespaceObject
})));//# sourceURL=[module]
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceURL=webpack-internal:///73936
`)}}]);
